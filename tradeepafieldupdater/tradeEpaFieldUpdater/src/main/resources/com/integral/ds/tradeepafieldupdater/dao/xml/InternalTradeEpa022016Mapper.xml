<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.integral.ds.tradeepafieldupdater.dao.InternalTradeEpa022016Mapper">
  <resultMap id="BaseResultMap" type="com.integral.ds.tradeepafieldupdater.model.InternalTradeEpa022016">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    <result column="runid" jdbcType="TIMESTAMP" property="runid" />
    <result column="tradeid" jdbcType="VARCHAR" property="tradeid" />
    <result column="orderid" jdbcType="VARCHAR" property="orderid" />
    <result column="mkrtkr" jdbcType="VARCHAR" property="mkrtkr" />
    <result column="makerorg" jdbcType="VARCHAR" property="makerorg" />
    <result column="takerorg" jdbcType="VARCHAR" property="takerorg" />
    <result column="stream" jdbcType="VARCHAR" property="stream" />
    <result column="ismultiquoteprvdr" jdbcType="BIT" property="ismultiquoteprvdr" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="tradetype" jdbcType="VARCHAR" property="tradetype" />
    <result column="workflow" jdbcType="VARCHAR" property="workflow" />
    <result column="origcpty" jdbcType="VARCHAR" property="origcpty" />
    <result column="coveredcpty" jdbcType="VARCHAR" property="coveredcpty" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="epaerrorcode" jdbcType="VARCHAR" property="epaerrorcode" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="time" jdbcType="TIME" property="time" />
    <result column="ccypair" jdbcType="VARCHAR" property="ccypair" />
    <result column="buysell" jdbcType="VARCHAR" property="buysell" />
    <result column="basamt" jdbcType="NUMERIC" property="basamt" />
    <result column="usdamt" jdbcType="NUMERIC" property="usdamt" />
    <result column="isretailtrade" jdbcType="BIT" property="isretailtrade" />
    <result column="tradethrough" jdbcType="BIT" property="tradethrough" />
    <result column="emsrateguid" jdbcType="VARCHAR" property="emsrateguid" />
    <result column="traderateguid" jdbcType="VARCHAR" property="traderateguid" />
    <result column="isemsepaguidsame" jdbcType="BIT" property="isemsepaguidsame" />
    <result column="ems_eparatearrivalcode" jdbcType="INTEGER" property="emsEparatearrivalcode" />
    <result column="isenoughliquidity" jdbcType="BIT" property="isenoughliquidity" />
    <result column="updatescountatsamems" jdbcType="INTEGER" property="updatescountatsamems" />
    <result column="traderatehitcount" jdbcType="INTEGER" property="traderatehitcount" />
    <result column="traderatetier" jdbcType="INTEGER" property="traderatetier" />
    <result column="traderate" jdbcType="NUMERIC" property="traderate" />
    <result column="prevailingprice" jdbcType="NUMERIC" property="prevailingprice" />
    <result column="changeinprice" jdbcType="NUMERIC" property="changeinprice" />
    <result column="cpriceimpr" jdbcType="BIT" property="cpriceimpr" />
    <result column="ppriceimpr" jdbcType="BIT" property="ppriceimpr" />
    <result column="numberofeventsmissed" jdbcType="INTEGER" property="numberofeventsmissed" />
    <result column="rateeventlifetime_ms" jdbcType="INTEGER" property="rateeventlifetimeMs" />
    <result column="ratevaluelifetime_ms" jdbcType="INTEGER" property="ratevaluelifetimeMs" />
    <result column="ratebucket" jdbcType="VARCHAR" property="ratebucket" />
    <result column="ratestatus" jdbcType="VARCHAR" property="ratestatus" />
    <result column="resiliencyfactor" jdbcType="NUMERIC" property="resiliencyfactor" />
    <result column="isresilient" jdbcType="BIT" property="isresilient" />
    <result column="edgetradingmarginms" jdbcType="INTEGER" property="edgetradingmarginms" />
    <result column="staleratemarginms" jdbcType="INTEGER" property="staleratemarginms" />
    <result column="isedgetrading_50" jdbcType="BIT" property="isedgetrading50" />
    <result column="isedgetrading_10" jdbcType="BIT" property="isedgetrading10" />
    <result column="quotedspread" jdbcType="NUMERIC" property="quotedspread" />
    <result column="effectivespread" jdbcType="NUMERIC" property="effectivespread" />
    <result column="spreadafter2secs" jdbcType="NUMERIC" property="spreadafter2secs" />
    <result column="spreadafter4secs" jdbcType="NUMERIC" property="spreadafter4secs" />
    <result column="spreadafter10secs" jdbcType="NUMERIC" property="spreadafter10secs" />
    <result column="spreadafter20secs" jdbcType="NUMERIC" property="spreadafter20secs" />
    <result column="spreadafter30secs" jdbcType="NUMERIC" property="spreadafter30secs" />
    <result column="spreadafter60secs" jdbcType="NUMERIC" property="spreadafter60secs" />
    <result column="cwin2secs" jdbcType="BIT" property="cwin2secs" />
    <result column="cwin4secs" jdbcType="BIT" property="cwin4secs" />
    <result column="istraderate1sided" jdbcType="BIT" property="istraderate1sided" />
    <result column="isnextrate1sided" jdbcType="BIT" property="isnextrate1sided" />
    <result column="responsetime" jdbcType="INTEGER" property="responsetime" />
    <result column="pricediscoverytime" jdbcType="INTEGER" property="pricediscoverytime" />
    <result column="insidespread" jdbcType="NUMERIC" property="insidespread" />
    <result column="ismktsnapparsed" jdbcType="BIT" property="ismktsnapparsed" />
    <result column="isauditlogparsed" jdbcType="BIT" property="isauditlogparsed" />
    <result column="virtualserver" jdbcType="VARCHAR" property="virtualserver" />
    <result column="costusd" jdbcType="NUMERIC" property="costusd" />
    <result column="quotedspreadpip" jdbcType="NUMERIC" property="quotedspreadpip" />
    <result column="effectivespreadpip" jdbcType="NUMERIC" property="effectivespreadpip" />
    <result column="spreadafter2secspip" jdbcType="NUMERIC" property="spreadafter2secspip" />
    <result column="spreadafter4secspip" jdbcType="NUMERIC" property="spreadafter4secspip" />
    <result column="spreadafter10secspip" jdbcType="NUMERIC" property="spreadafter10secspip" />
    <result column="spreadafter20secspip" jdbcType="NUMERIC" property="spreadafter20secspip" />
    <result column="spreadafter30secspip" jdbcType="NUMERIC" property="spreadafter30secspip" />
    <result column="spreadafter60secspip" jdbcType="NUMERIC" property="spreadafter60secspip" />
    <result column="insidespreadcostusd" jdbcType="NUMERIC" property="insidespreadcostusd" />
    <result column="insidespreadpip" jdbcType="NUMERIC" property="insidespreadpip" />
    <result column="tradematchround" jdbcType="INTEGER" property="tradematchround" />
    <result column="nextbestprice" jdbcType="NUMERIC" property="nextbestprice" />
    <result column="nextbestprvdr" jdbcType="VARCHAR" property="nextbestprvdr" />
    <result column="slippagewrtnextbestprice" jdbcType="NUMERIC" property="slippagewrtnextbestprice" />
    <result column="nextbestpricemissedbyms" jdbcType="INTEGER" property="nextbestpricemissedbyms" />
    <result column="timeelapsedsinceemsrate" jdbcType="INTEGER" property="timeelapsedsinceemsrate" />
    <result column="timeelapsedsinceprevrate" jdbcType="INTEGER" property="timeelapsedsinceprevrate" />
    <result column="eventsmissedafteremsrate" jdbcType="INTEGER" property="eventsmissedafteremsrate" />
    <result column="postemsratemissedeventsat" jdbcType="VARCHAR" property="postemsratemissedeventsat" />
    <result column="emsmatchingduration" jdbcType="INTEGER" property="emsmatchingduration" />
    <result column="serveracceptanceduration" jdbcType="INTEGER" property="serveracceptanceduration" />
    <result column="serverresponseduration" jdbcType="INTEGER" property="serverresponseduration" />
    <result column="tradesizebucket" jdbcType="VARCHAR" property="tradesizebucket" />
    <result column="ratesrelatederrorcode" jdbcType="VARCHAR" property="ratesrelatederrorcode" />
    <result column="snapshotrelatederrorcode" jdbcType="VARCHAR" property="snapshotrelatederrorcode" />
    <result column="rateauditrelatederrorcode" jdbcType="VARCHAR" property="rateauditrelatederrorcode" />
    <result column="ishistoricalmatch" jdbcType="VARCHAR" property="ishistoricalmatch" />
    <result column="tieracceptancepattern" jdbcType="VARCHAR" property="tieracceptancepattern" />
    <result column="istieracceptanceconsistent" jdbcType="BIT" property="istieracceptanceconsistent" />
    <result column="takerisbroker" jdbcType="BIT" property="takerisbroker" />
    <result column="makerisbroker" jdbcType="BIT" property="makerisbroker" />
    <result column="tradescount2secpast" jdbcType="INTEGER" property="tradescount2secpast" />
    <result column="tradescount250mspast" jdbcType="INTEGER" property="tradescount250mspast" />
    <result column="tradescountwithlastquote" jdbcType="INTEGER" property="tradescountwithlastquote" />
    <result column="tradesvolume2secpast" jdbcType="BIGINT" property="tradesvolume2secpast" />
    <result column="tradesvolume250mspast" jdbcType="BIGINT" property="tradesvolume250mspast" />
    <result column="tradesvolumewithlastquote" jdbcType="BIGINT" property="tradesvolumewithlastquote" />
    <result column="liquiditywithlastquote" jdbcType="BIGINT" property="liquiditywithlastquote" />
    <result column="fxbatstartofsec" jdbcType="NUMERIC" property="fxbatstartofsec" />
    <result column="fxbatstartofsecspread" jdbcType="NUMERIC" property="fxbatstartofsecspread" />
    <result column="fxbatstartofsecspreadpip" jdbcType="NUMERIC" property="fxbatstartofsecspreadpip" />
    <result column="fxbatendofsec" jdbcType="NUMERIC" property="fxbatendofsec" />
    <result column="fxbatendofsecspread" jdbcType="NUMERIC" property="fxbatendofsecspread" />
    <result column="fxbatendofsecspreadpip" jdbcType="NUMERIC" property="fxbatendofsecspreadpip" />
    <result column="internalcomment" jdbcType="VARCHAR" property="internalcomment" />
    <result column="isdisplayedliquidity" jdbcType="BIT" property="isdisplayedliquidity" />
    <result column="isdisplaystreaminvolved" jdbcType="BIT" property="isdisplaystreaminvolved" />
    <result column="isdisplaystream" jdbcType="BIT" property="isdisplaystream" />
    <result column="quotearrivaldelay" jdbcType="INTEGER" property="quotearrivaldelay" />
    <result column="isquotearrivaldelayed" jdbcType="BIT" property="isquotearrivaldelayed" />
    <result column="priceafter2secs" jdbcType="NUMERIC" property="priceafter2secs" />
    <result column="priceafter4secs" jdbcType="NUMERIC" property="priceafter4secs" />
    <result column="priceafter10secs" jdbcType="NUMERIC" property="priceafter10secs" />
    <result column="priceafter20secs" jdbcType="NUMERIC" property="priceafter20secs" />
    <result column="priceafter30secs" jdbcType="NUMERIC" property="priceafter30secs" />
    <result column="priceafter60secs" jdbcType="NUMERIC" property="priceafter60secs" />
    <result column="priceprovspreadval" jdbcType="NUMERIC" property="priceprovspreadval" />
    <result column="priceprovspreadunits" jdbcType="VARCHAR" property="priceprovspreadunits" />
    <result column="quotedspreadfromrateaudit" jdbcType="NUMERIC" property="quotedspreadfromrateaudit" />
    <result column="quotedspreadpipsfromrateaudit" jdbcType="NUMERIC" property="quotedspreadpipsfromrateaudit" />
    <result column="partial" jdbcType="VARCHAR" property="partial" />
    <result column="matchingamount" jdbcType="NUMERIC" property="matchingamount" />
    <result column="sweepnumberfromgm" jdbcType="INTEGER" property="sweepnumberfromgm" />
    <result column="tradethroughwrtsweep" jdbcType="BIT" property="tradethroughwrtsweep" />
    <result column="traderatevaluetruelife" jdbcType="BIGINT" property="traderatevaluetruelife" />
    <result column="adaptortoislatency" jdbcType="BIGINT" property="adaptortoislatency" />
    <result column="realratesprovider" jdbcType="VARCHAR" property="realratesprovider" />
    <result column="realratesstream" jdbcType="VARCHAR" property="realratesstream" />
    <result column="streamquotedspreadfromrateaudit" jdbcType="NUMERIC" property="streamquotedspreadfromrateaudit" />
    <result column="streamquotedspreadpipsfromrateaudit" jdbcType="NUMERIC" property="streamquotedspreadpipsfromrateaudit" />
    <result column="emsratetier" jdbcType="INTEGER" property="emsratetier" />
    <result column="pricejustbeforeemsrate" jdbcType="NUMERIC" property="pricejustbeforeemsrate" />
    <result column="priceonesecbeforeemsrate" jdbcType="NUMERIC" property="priceonesecbeforeemsrate" />
    <result column="pricetwosecbeforeemsrate" jdbcType="NUMERIC" property="pricetwosecbeforeemsrate" />
    <result column="pricethreesecbeforeemsrate" jdbcType="NUMERIC" property="pricethreesecbeforeemsrate" />
    <result column="timedistancefromfirstmatchinground" jdbcType="BIGINT" property="timedistancefromfirstmatchinground" />
    <result column="availablevolatmatchingrate" jdbcType="NUMERIC" property="availablevolatmatchingrate" />
    <result column="dealtamt" jdbcType="NUMERIC" property="dealtamt" />
    <result column="matchingamtusd" jdbcType="NUMERIC" property="matchingamtusd" />
    <result column="streamsacceptancepattern" jdbcType="VARCHAR" property="streamsacceptancepattern" />
    <result column="streamsacceptancepatterndetails" jdbcType="VARCHAR" property="streamsacceptancepatterndetails" />
    <result column="streamsacceptancerefkey" jdbcType="NUMERIC" property="streamsacceptancerefkey" />
    <result column="rateefftimeuptoms" jdbcType="BIT" property="rateefftimeuptoms" />
    <result column="spreadafter1secs" jdbcType="NUMERIC" property="spreadafter1secs" />
    <result column="spreadafter1secspip" jdbcType="NUMERIC" property="spreadafter1secspip" />
    <result column="fxbshiftafter1sec" jdbcType="NUMERIC" property="fxbshiftafter1sec" />
    <result column="fxbshiftafter1secpip" jdbcType="NUMERIC" property="fxbshiftafter1secpip" />
    <result column="fxbshiftafter2sec" jdbcType="NUMERIC" property="fxbshiftafter2sec" />
    <result column="fxbshiftafter2secpip" jdbcType="NUMERIC" property="fxbshiftafter2secpip" />
    <result column="fxbshiftafter4sec" jdbcType="NUMERIC" property="fxbshiftafter4sec" />
    <result column="fxbshiftafter4secpip" jdbcType="NUMERIC" property="fxbshiftafter4secpip" />
    <result column="fxbshiftafter10sec" jdbcType="NUMERIC" property="fxbshiftafter10sec" />
    <result column="fxbshiftafter10secpip" jdbcType="NUMERIC" property="fxbshiftafter10secpip" />
    <result column="fxbshiftafter20sec" jdbcType="NUMERIC" property="fxbshiftafter20sec" />
    <result column="fxbshiftafter20secpip" jdbcType="NUMERIC" property="fxbshiftafter20secpip" />
    <result column="fxbshiftafter30sec" jdbcType="NUMERIC" property="fxbshiftafter30sec" />
    <result column="fxbshiftafter30secpip" jdbcType="NUMERIC" property="fxbshiftafter30secpip" />
    <result column="fxbshiftafter60sec" jdbcType="NUMERIC" property="fxbshiftafter60sec" />
    <result column="fxbshiftafter60secpip" jdbcType="NUMERIC" property="fxbshiftafter60secpip" />
    <result column="ismoreliquiditywithemsquote" jdbcType="BIT" property="ismoreliquiditywithemsquote" />
    <result column="ismoreliquiditywithepaquote" jdbcType="BIT" property="ismoreliquiditywithepaquote" />
    <result column="ratesentbyadapterlatency" jdbcType="NUMERIC" property="ratesentbyadapterlatency" />
    <result column="adapteroutisinlatency" jdbcType="NUMERIC" property="adapteroutisinlatency" />
    <result column="midrate" jdbcType="NUMERIC" property="midrate" />
    <result column="halfspread" jdbcType="NUMERIC" property="halfspread" />
    <result column="halfspreadpip" jdbcType="NUMERIC" property="halfspreadpip" />
    <result column="halfspreadbp" jdbcType="NUMERIC" property="halfspreadbp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    runid, tradeid, orderid, mkrtkr, makerorg, takerorg, stream, ismultiquoteprvdr, status, 
    tradetype, workflow, origcpty, coveredcpty, comment, epaerrorcode, date, time, ccypair, 
    buysell, basamt, usdamt, isretailtrade, tradethrough, emsrateguid, traderateguid, 
    isemsepaguidsame, ems_eparatearrivalcode, isenoughliquidity, updatescountatsamems, 
    traderatehitcount, traderatetier, traderate, prevailingprice, changeinprice, cpriceimpr, 
    ppriceimpr, numberofeventsmissed, rateeventlifetime_ms, ratevaluelifetime_ms, ratebucket, 
    ratestatus, resiliencyfactor, isresilient, edgetradingmarginms, staleratemarginms, 
    isedgetrading_50, isedgetrading_10, quotedspread, effectivespread, spreadafter2secs, 
    spreadafter4secs, spreadafter10secs, spreadafter20secs, spreadafter30secs, spreadafter60secs, 
    cwin2secs, cwin4secs, istraderate1sided, isnextrate1sided, responsetime, pricediscoverytime, 
    insidespread, ismktsnapparsed, isauditlogparsed, virtualserver, costusd, quotedspreadpip, 
    effectivespreadpip, spreadafter2secspip, spreadafter4secspip, spreadafter10secspip, 
    spreadafter20secspip, spreadafter30secspip, spreadafter60secspip, insidespreadcostusd, 
    insidespreadpip, tradematchround, nextbestprice, nextbestprvdr, slippagewrtnextbestprice, 
    nextbestpricemissedbyms, timeelapsedsinceemsrate, timeelapsedsinceprevrate, eventsmissedafteremsrate, 
    postemsratemissedeventsat, emsmatchingduration, serveracceptanceduration, serverresponseduration, 
    tradesizebucket, ratesrelatederrorcode, snapshotrelatederrorcode, rateauditrelatederrorcode, 
    ishistoricalmatch, tieracceptancepattern, istieracceptanceconsistent, takerisbroker, 
    makerisbroker, tradescount2secpast, tradescount250mspast, tradescountwithlastquote, 
    tradesvolume2secpast, tradesvolume250mspast, tradesvolumewithlastquote, liquiditywithlastquote, 
    fxbatstartofsec, fxbatstartofsecspread, fxbatstartofsecspreadpip, fxbatendofsec, 
    fxbatendofsecspread, fxbatendofsecspreadpip, internalcomment, isdisplayedliquidity, 
    isdisplaystreaminvolved, isdisplaystream, quotearrivaldelay, isquotearrivaldelayed, 
    priceafter2secs, priceafter4secs, priceafter10secs, priceafter20secs, priceafter30secs, 
    priceafter60secs, priceprovspreadval, priceprovspreadunits, quotedspreadfromrateaudit, 
    quotedspreadpipsfromrateaudit, partial, matchingamount, sweepnumberfromgm, tradethroughwrtsweep, 
    traderatevaluetruelife, adaptortoislatency, realratesprovider, realratesstream, streamquotedspreadfromrateaudit, 
    streamquotedspreadpipsfromrateaudit, emsratetier, pricejustbeforeemsrate, priceonesecbeforeemsrate, 
    pricetwosecbeforeemsrate, pricethreesecbeforeemsrate, timedistancefromfirstmatchinground, 
    availablevolatmatchingrate, dealtamt, matchingamtusd, streamsacceptancepattern, streamsacceptancepatterndetails, 
    streamsacceptancerefkey, rateefftimeuptoms, spreadafter1secs, spreadafter1secspip, 
    fxbshiftafter1sec, fxbshiftafter1secpip, fxbshiftafter2sec, fxbshiftafter2secpip, 
    fxbshiftafter4sec, fxbshiftafter4secpip, fxbshiftafter10sec, fxbshiftafter10secpip, 
    fxbshiftafter20sec, fxbshiftafter20secpip, fxbshiftafter30sec, fxbshiftafter30secpip, 
    fxbshiftafter60sec, fxbshiftafter60secpip, ismoreliquiditywithemsquote, ismoreliquiditywithepaquote, 
    ratesentbyadapterlatency, adapteroutisinlatency, midrate, halfspread, halfspreadpip, 
    halfspreadbp
  </sql>
  <select id="selectByExample" parameterType="com.integral.ds.tradeepafieldupdater.model.InternalTradeEpa022016Example" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from internal_trade_epa_02_2016
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.integral.ds.tradeepafieldupdater.model.InternalTradeEpa022016Example">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    delete from internal_trade_epa_02_2016
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.integral.ds.tradeepafieldupdater.model.InternalTradeEpa022016">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    insert into internal_trade_epa_02_2016 (runid, tradeid, orderid, 
      mkrtkr, makerorg, takerorg, 
      stream, ismultiquoteprvdr, status, 
      tradetype, workflow, origcpty, 
      coveredcpty, comment, epaerrorcode, 
      date, time, ccypair, buysell, 
      basamt, usdamt, isretailtrade, 
      tradethrough, emsrateguid, traderateguid, 
      isemsepaguidsame, ems_eparatearrivalcode, isenoughliquidity, 
      updatescountatsamems, traderatehitcount, 
      traderatetier, traderate, prevailingprice, 
      changeinprice, cpriceimpr, ppriceimpr, 
      numberofeventsmissed, rateeventlifetime_ms, 
      ratevaluelifetime_ms, ratebucket, ratestatus, 
      resiliencyfactor, isresilient, edgetradingmarginms, 
      staleratemarginms, isedgetrading_50, isedgetrading_10, 
      quotedspread, effectivespread, spreadafter2secs, 
      spreadafter4secs, spreadafter10secs, spreadafter20secs, 
      spreadafter30secs, spreadafter60secs, cwin2secs, 
      cwin4secs, istraderate1sided, isnextrate1sided, 
      responsetime, pricediscoverytime, insidespread, 
      ismktsnapparsed, isauditlogparsed, virtualserver, 
      costusd, quotedspreadpip, effectivespreadpip, 
      spreadafter2secspip, spreadafter4secspip, 
      spreadafter10secspip, spreadafter20secspip, 
      spreadafter30secspip, spreadafter60secspip, 
      insidespreadcostusd, insidespreadpip, tradematchround, 
      nextbestprice, nextbestprvdr, slippagewrtnextbestprice, 
      nextbestpricemissedbyms, timeelapsedsinceemsrate, 
      timeelapsedsinceprevrate, eventsmissedafteremsrate, 
      postemsratemissedeventsat, emsmatchingduration, 
      serveracceptanceduration, serverresponseduration, 
      tradesizebucket, ratesrelatederrorcode, 
      snapshotrelatederrorcode, rateauditrelatederrorcode, 
      ishistoricalmatch, tieracceptancepattern, 
      istieracceptanceconsistent, takerisbroker, makerisbroker, 
      tradescount2secpast, tradescount250mspast, 
      tradescountwithlastquote, tradesvolume2secpast, 
      tradesvolume250mspast, tradesvolumewithlastquote, 
      liquiditywithlastquote, fxbatstartofsec, 
      fxbatstartofsecspread, fxbatstartofsecspreadpip, 
      fxbatendofsec, fxbatendofsecspread, fxbatendofsecspreadpip, 
      internalcomment, isdisplayedliquidity, isdisplaystreaminvolved, 
      isdisplaystream, quotearrivaldelay, isquotearrivaldelayed, 
      priceafter2secs, priceafter4secs, priceafter10secs, 
      priceafter20secs, priceafter30secs, priceafter60secs, 
      priceprovspreadval, priceprovspreadunits, 
      quotedspreadfromrateaudit, quotedspreadpipsfromrateaudit, 
      partial, matchingamount, sweepnumberfromgm, 
      tradethroughwrtsweep, traderatevaluetruelife, 
      adaptortoislatency, realratesprovider, realratesstream, 
      streamquotedspreadfromrateaudit, streamquotedspreadpipsfromrateaudit, 
      emsratetier, pricejustbeforeemsrate, priceonesecbeforeemsrate, 
      pricetwosecbeforeemsrate, pricethreesecbeforeemsrate, 
      timedistancefromfirstmatchinground, availablevolatmatchingrate, 
      dealtamt, matchingamtusd, streamsacceptancepattern, 
      streamsacceptancepatterndetails, streamsacceptancerefkey, 
      rateefftimeuptoms, spreadafter1secs, spreadafter1secspip, 
      fxbshiftafter1sec, fxbshiftafter1secpip, 
      fxbshiftafter2sec, fxbshiftafter2secpip, 
      fxbshiftafter4sec, fxbshiftafter4secpip, 
      fxbshiftafter10sec, fxbshiftafter10secpip, 
      fxbshiftafter20sec, fxbshiftafter20secpip, 
      fxbshiftafter30sec, fxbshiftafter30secpip, 
      fxbshiftafter60sec, fxbshiftafter60secpip, 
      ismoreliquiditywithemsquote, ismoreliquiditywithepaquote, 
      ratesentbyadapterlatency, adapteroutisinlatency, 
      midrate, halfspread, halfspreadpip, 
      halfspreadbp)
    values (#{runid,jdbcType=TIMESTAMP}, #{tradeid,jdbcType=VARCHAR}, #{orderid,jdbcType=VARCHAR}, 
      #{mkrtkr,jdbcType=VARCHAR}, #{makerorg,jdbcType=VARCHAR}, #{takerorg,jdbcType=VARCHAR}, 
      #{stream,jdbcType=VARCHAR}, #{ismultiquoteprvdr,jdbcType=BIT}, #{status,jdbcType=VARCHAR}, 
      #{tradetype,jdbcType=VARCHAR}, #{workflow,jdbcType=VARCHAR}, #{origcpty,jdbcType=VARCHAR}, 
      #{coveredcpty,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{epaerrorcode,jdbcType=VARCHAR}, 
      #{date,jdbcType=DATE}, #{time,jdbcType=TIME}, #{ccypair,jdbcType=VARCHAR}, #{buysell,jdbcType=VARCHAR}, 
      #{basamt,jdbcType=NUMERIC}, #{usdamt,jdbcType=NUMERIC}, #{isretailtrade,jdbcType=BIT}, 
      #{tradethrough,jdbcType=BIT}, #{emsrateguid,jdbcType=VARCHAR}, #{traderateguid,jdbcType=VARCHAR}, 
      #{isemsepaguidsame,jdbcType=BIT}, #{emsEparatearrivalcode,jdbcType=INTEGER}, #{isenoughliquidity,jdbcType=BIT}, 
      #{updatescountatsamems,jdbcType=INTEGER}, #{traderatehitcount,jdbcType=INTEGER}, 
      #{traderatetier,jdbcType=INTEGER}, #{traderate,jdbcType=NUMERIC}, #{prevailingprice,jdbcType=NUMERIC}, 
      #{changeinprice,jdbcType=NUMERIC}, #{cpriceimpr,jdbcType=BIT}, #{ppriceimpr,jdbcType=BIT}, 
      #{numberofeventsmissed,jdbcType=INTEGER}, #{rateeventlifetimeMs,jdbcType=INTEGER}, 
      #{ratevaluelifetimeMs,jdbcType=INTEGER}, #{ratebucket,jdbcType=VARCHAR}, #{ratestatus,jdbcType=VARCHAR}, 
      #{resiliencyfactor,jdbcType=NUMERIC}, #{isresilient,jdbcType=BIT}, #{edgetradingmarginms,jdbcType=INTEGER}, 
      #{staleratemarginms,jdbcType=INTEGER}, #{isedgetrading50,jdbcType=BIT}, #{isedgetrading10,jdbcType=BIT}, 
      #{quotedspread,jdbcType=NUMERIC}, #{effectivespread,jdbcType=NUMERIC}, #{spreadafter2secs,jdbcType=NUMERIC}, 
      #{spreadafter4secs,jdbcType=NUMERIC}, #{spreadafter10secs,jdbcType=NUMERIC}, #{spreadafter20secs,jdbcType=NUMERIC}, 
      #{spreadafter30secs,jdbcType=NUMERIC}, #{spreadafter60secs,jdbcType=NUMERIC}, #{cwin2secs,jdbcType=BIT}, 
      #{cwin4secs,jdbcType=BIT}, #{istraderate1sided,jdbcType=BIT}, #{isnextrate1sided,jdbcType=BIT}, 
      #{responsetime,jdbcType=INTEGER}, #{pricediscoverytime,jdbcType=INTEGER}, #{insidespread,jdbcType=NUMERIC}, 
      #{ismktsnapparsed,jdbcType=BIT}, #{isauditlogparsed,jdbcType=BIT}, #{virtualserver,jdbcType=VARCHAR}, 
      #{costusd,jdbcType=NUMERIC}, #{quotedspreadpip,jdbcType=NUMERIC}, #{effectivespreadpip,jdbcType=NUMERIC}, 
      #{spreadafter2secspip,jdbcType=NUMERIC}, #{spreadafter4secspip,jdbcType=NUMERIC}, 
      #{spreadafter10secspip,jdbcType=NUMERIC}, #{spreadafter20secspip,jdbcType=NUMERIC}, 
      #{spreadafter30secspip,jdbcType=NUMERIC}, #{spreadafter60secspip,jdbcType=NUMERIC}, 
      #{insidespreadcostusd,jdbcType=NUMERIC}, #{insidespreadpip,jdbcType=NUMERIC}, #{tradematchround,jdbcType=INTEGER}, 
      #{nextbestprice,jdbcType=NUMERIC}, #{nextbestprvdr,jdbcType=VARCHAR}, #{slippagewrtnextbestprice,jdbcType=NUMERIC}, 
      #{nextbestpricemissedbyms,jdbcType=INTEGER}, #{timeelapsedsinceemsrate,jdbcType=INTEGER}, 
      #{timeelapsedsinceprevrate,jdbcType=INTEGER}, #{eventsmissedafteremsrate,jdbcType=INTEGER}, 
      #{postemsratemissedeventsat,jdbcType=VARCHAR}, #{emsmatchingduration,jdbcType=INTEGER}, 
      #{serveracceptanceduration,jdbcType=INTEGER}, #{serverresponseduration,jdbcType=INTEGER}, 
      #{tradesizebucket,jdbcType=VARCHAR}, #{ratesrelatederrorcode,jdbcType=VARCHAR}, 
      #{snapshotrelatederrorcode,jdbcType=VARCHAR}, #{rateauditrelatederrorcode,jdbcType=VARCHAR}, 
      #{ishistoricalmatch,jdbcType=VARCHAR}, #{tieracceptancepattern,jdbcType=VARCHAR}, 
      #{istieracceptanceconsistent,jdbcType=BIT}, #{takerisbroker,jdbcType=BIT}, #{makerisbroker,jdbcType=BIT}, 
      #{tradescount2secpast,jdbcType=INTEGER}, #{tradescount250mspast,jdbcType=INTEGER}, 
      #{tradescountwithlastquote,jdbcType=INTEGER}, #{tradesvolume2secpast,jdbcType=BIGINT}, 
      #{tradesvolume250mspast,jdbcType=BIGINT}, #{tradesvolumewithlastquote,jdbcType=BIGINT}, 
      #{liquiditywithlastquote,jdbcType=BIGINT}, #{fxbatstartofsec,jdbcType=NUMERIC}, 
      #{fxbatstartofsecspread,jdbcType=NUMERIC}, #{fxbatstartofsecspreadpip,jdbcType=NUMERIC}, 
      #{fxbatendofsec,jdbcType=NUMERIC}, #{fxbatendofsecspread,jdbcType=NUMERIC}, #{fxbatendofsecspreadpip,jdbcType=NUMERIC}, 
      #{internalcomment,jdbcType=VARCHAR}, #{isdisplayedliquidity,jdbcType=BIT}, #{isdisplaystreaminvolved,jdbcType=BIT}, 
      #{isdisplaystream,jdbcType=BIT}, #{quotearrivaldelay,jdbcType=INTEGER}, #{isquotearrivaldelayed,jdbcType=BIT}, 
      #{priceafter2secs,jdbcType=NUMERIC}, #{priceafter4secs,jdbcType=NUMERIC}, #{priceafter10secs,jdbcType=NUMERIC}, 
      #{priceafter20secs,jdbcType=NUMERIC}, #{priceafter30secs,jdbcType=NUMERIC}, #{priceafter60secs,jdbcType=NUMERIC}, 
      #{priceprovspreadval,jdbcType=NUMERIC}, #{priceprovspreadunits,jdbcType=VARCHAR}, 
      #{quotedspreadfromrateaudit,jdbcType=NUMERIC}, #{quotedspreadpipsfromrateaudit,jdbcType=NUMERIC}, 
      #{partial,jdbcType=VARCHAR}, #{matchingamount,jdbcType=NUMERIC}, #{sweepnumberfromgm,jdbcType=INTEGER}, 
      #{tradethroughwrtsweep,jdbcType=BIT}, #{traderatevaluetruelife,jdbcType=BIGINT}, 
      #{adaptortoislatency,jdbcType=BIGINT}, #{realratesprovider,jdbcType=VARCHAR}, #{realratesstream,jdbcType=VARCHAR}, 
      #{streamquotedspreadfromrateaudit,jdbcType=NUMERIC}, #{streamquotedspreadpipsfromrateaudit,jdbcType=NUMERIC}, 
      #{emsratetier,jdbcType=INTEGER}, #{pricejustbeforeemsrate,jdbcType=NUMERIC}, #{priceonesecbeforeemsrate,jdbcType=NUMERIC}, 
      #{pricetwosecbeforeemsrate,jdbcType=NUMERIC}, #{pricethreesecbeforeemsrate,jdbcType=NUMERIC}, 
      #{timedistancefromfirstmatchinground,jdbcType=BIGINT}, #{availablevolatmatchingrate,jdbcType=NUMERIC}, 
      #{dealtamt,jdbcType=NUMERIC}, #{matchingamtusd,jdbcType=NUMERIC}, #{streamsacceptancepattern,jdbcType=VARCHAR}, 
      #{streamsacceptancepatterndetails,jdbcType=VARCHAR}, #{streamsacceptancerefkey,jdbcType=NUMERIC}, 
      #{rateefftimeuptoms,jdbcType=BIT}, #{spreadafter1secs,jdbcType=NUMERIC}, #{spreadafter1secspip,jdbcType=NUMERIC}, 
      #{fxbshiftafter1sec,jdbcType=NUMERIC}, #{fxbshiftafter1secpip,jdbcType=NUMERIC}, 
      #{fxbshiftafter2sec,jdbcType=NUMERIC}, #{fxbshiftafter2secpip,jdbcType=NUMERIC}, 
      #{fxbshiftafter4sec,jdbcType=NUMERIC}, #{fxbshiftafter4secpip,jdbcType=NUMERIC}, 
      #{fxbshiftafter10sec,jdbcType=NUMERIC}, #{fxbshiftafter10secpip,jdbcType=NUMERIC}, 
      #{fxbshiftafter20sec,jdbcType=NUMERIC}, #{fxbshiftafter20secpip,jdbcType=NUMERIC}, 
      #{fxbshiftafter30sec,jdbcType=NUMERIC}, #{fxbshiftafter30secpip,jdbcType=NUMERIC}, 
      #{fxbshiftafter60sec,jdbcType=NUMERIC}, #{fxbshiftafter60secpip,jdbcType=NUMERIC}, 
      #{ismoreliquiditywithemsquote,jdbcType=BIT}, #{ismoreliquiditywithepaquote,jdbcType=BIT}, 
      #{ratesentbyadapterlatency,jdbcType=NUMERIC}, #{adapteroutisinlatency,jdbcType=NUMERIC}, 
      #{midrate,jdbcType=NUMERIC}, #{halfspread,jdbcType=NUMERIC}, #{halfspreadpip,jdbcType=NUMERIC}, 
      #{halfspreadbp,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.integral.ds.tradeepafieldupdater.model.InternalTradeEpa022016">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    insert into internal_trade_epa_02_2016
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="runid != null">
        runid,
      </if>
      <if test="tradeid != null">
        tradeid,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="mkrtkr != null">
        mkrtkr,
      </if>
      <if test="makerorg != null">
        makerorg,
      </if>
      <if test="takerorg != null">
        takerorg,
      </if>
      <if test="stream != null">
        stream,
      </if>
      <if test="ismultiquoteprvdr != null">
        ismultiquoteprvdr,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="tradetype != null">
        tradetype,
      </if>
      <if test="workflow != null">
        workflow,
      </if>
      <if test="origcpty != null">
        origcpty,
      </if>
      <if test="coveredcpty != null">
        coveredcpty,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="epaerrorcode != null">
        epaerrorcode,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="ccypair != null">
        ccypair,
      </if>
      <if test="buysell != null">
        buysell,
      </if>
      <if test="basamt != null">
        basamt,
      </if>
      <if test="usdamt != null">
        usdamt,
      </if>
      <if test="isretailtrade != null">
        isretailtrade,
      </if>
      <if test="tradethrough != null">
        tradethrough,
      </if>
      <if test="emsrateguid != null">
        emsrateguid,
      </if>
      <if test="traderateguid != null">
        traderateguid,
      </if>
      <if test="isemsepaguidsame != null">
        isemsepaguidsame,
      </if>
      <if test="emsEparatearrivalcode != null">
        ems_eparatearrivalcode,
      </if>
      <if test="isenoughliquidity != null">
        isenoughliquidity,
      </if>
      <if test="updatescountatsamems != null">
        updatescountatsamems,
      </if>
      <if test="traderatehitcount != null">
        traderatehitcount,
      </if>
      <if test="traderatetier != null">
        traderatetier,
      </if>
      <if test="traderate != null">
        traderate,
      </if>
      <if test="prevailingprice != null">
        prevailingprice,
      </if>
      <if test="changeinprice != null">
        changeinprice,
      </if>
      <if test="cpriceimpr != null">
        cpriceimpr,
      </if>
      <if test="ppriceimpr != null">
        ppriceimpr,
      </if>
      <if test="numberofeventsmissed != null">
        numberofeventsmissed,
      </if>
      <if test="rateeventlifetimeMs != null">
        rateeventlifetime_ms,
      </if>
      <if test="ratevaluelifetimeMs != null">
        ratevaluelifetime_ms,
      </if>
      <if test="ratebucket != null">
        ratebucket,
      </if>
      <if test="ratestatus != null">
        ratestatus,
      </if>
      <if test="resiliencyfactor != null">
        resiliencyfactor,
      </if>
      <if test="isresilient != null">
        isresilient,
      </if>
      <if test="edgetradingmarginms != null">
        edgetradingmarginms,
      </if>
      <if test="staleratemarginms != null">
        staleratemarginms,
      </if>
      <if test="isedgetrading50 != null">
        isedgetrading_50,
      </if>
      <if test="isedgetrading10 != null">
        isedgetrading_10,
      </if>
      <if test="quotedspread != null">
        quotedspread,
      </if>
      <if test="effectivespread != null">
        effectivespread,
      </if>
      <if test="spreadafter2secs != null">
        spreadafter2secs,
      </if>
      <if test="spreadafter4secs != null">
        spreadafter4secs,
      </if>
      <if test="spreadafter10secs != null">
        spreadafter10secs,
      </if>
      <if test="spreadafter20secs != null">
        spreadafter20secs,
      </if>
      <if test="spreadafter30secs != null">
        spreadafter30secs,
      </if>
      <if test="spreadafter60secs != null">
        spreadafter60secs,
      </if>
      <if test="cwin2secs != null">
        cwin2secs,
      </if>
      <if test="cwin4secs != null">
        cwin4secs,
      </if>
      <if test="istraderate1sided != null">
        istraderate1sided,
      </if>
      <if test="isnextrate1sided != null">
        isnextrate1sided,
      </if>
      <if test="responsetime != null">
        responsetime,
      </if>
      <if test="pricediscoverytime != null">
        pricediscoverytime,
      </if>
      <if test="insidespread != null">
        insidespread,
      </if>
      <if test="ismktsnapparsed != null">
        ismktsnapparsed,
      </if>
      <if test="isauditlogparsed != null">
        isauditlogparsed,
      </if>
      <if test="virtualserver != null">
        virtualserver,
      </if>
      <if test="costusd != null">
        costusd,
      </if>
      <if test="quotedspreadpip != null">
        quotedspreadpip,
      </if>
      <if test="effectivespreadpip != null">
        effectivespreadpip,
      </if>
      <if test="spreadafter2secspip != null">
        spreadafter2secspip,
      </if>
      <if test="spreadafter4secspip != null">
        spreadafter4secspip,
      </if>
      <if test="spreadafter10secspip != null">
        spreadafter10secspip,
      </if>
      <if test="spreadafter20secspip != null">
        spreadafter20secspip,
      </if>
      <if test="spreadafter30secspip != null">
        spreadafter30secspip,
      </if>
      <if test="spreadafter60secspip != null">
        spreadafter60secspip,
      </if>
      <if test="insidespreadcostusd != null">
        insidespreadcostusd,
      </if>
      <if test="insidespreadpip != null">
        insidespreadpip,
      </if>
      <if test="tradematchround != null">
        tradematchround,
      </if>
      <if test="nextbestprice != null">
        nextbestprice,
      </if>
      <if test="nextbestprvdr != null">
        nextbestprvdr,
      </if>
      <if test="slippagewrtnextbestprice != null">
        slippagewrtnextbestprice,
      </if>
      <if test="nextbestpricemissedbyms != null">
        nextbestpricemissedbyms,
      </if>
      <if test="timeelapsedsinceemsrate != null">
        timeelapsedsinceemsrate,
      </if>
      <if test="timeelapsedsinceprevrate != null">
        timeelapsedsinceprevrate,
      </if>
      <if test="eventsmissedafteremsrate != null">
        eventsmissedafteremsrate,
      </if>
      <if test="postemsratemissedeventsat != null">
        postemsratemissedeventsat,
      </if>
      <if test="emsmatchingduration != null">
        emsmatchingduration,
      </if>
      <if test="serveracceptanceduration != null">
        serveracceptanceduration,
      </if>
      <if test="serverresponseduration != null">
        serverresponseduration,
      </if>
      <if test="tradesizebucket != null">
        tradesizebucket,
      </if>
      <if test="ratesrelatederrorcode != null">
        ratesrelatederrorcode,
      </if>
      <if test="snapshotrelatederrorcode != null">
        snapshotrelatederrorcode,
      </if>
      <if test="rateauditrelatederrorcode != null">
        rateauditrelatederrorcode,
      </if>
      <if test="ishistoricalmatch != null">
        ishistoricalmatch,
      </if>
      <if test="tieracceptancepattern != null">
        tieracceptancepattern,
      </if>
      <if test="istieracceptanceconsistent != null">
        istieracceptanceconsistent,
      </if>
      <if test="takerisbroker != null">
        takerisbroker,
      </if>
      <if test="makerisbroker != null">
        makerisbroker,
      </if>
      <if test="tradescount2secpast != null">
        tradescount2secpast,
      </if>
      <if test="tradescount250mspast != null">
        tradescount250mspast,
      </if>
      <if test="tradescountwithlastquote != null">
        tradescountwithlastquote,
      </if>
      <if test="tradesvolume2secpast != null">
        tradesvolume2secpast,
      </if>
      <if test="tradesvolume250mspast != null">
        tradesvolume250mspast,
      </if>
      <if test="tradesvolumewithlastquote != null">
        tradesvolumewithlastquote,
      </if>
      <if test="liquiditywithlastquote != null">
        liquiditywithlastquote,
      </if>
      <if test="fxbatstartofsec != null">
        fxbatstartofsec,
      </if>
      <if test="fxbatstartofsecspread != null">
        fxbatstartofsecspread,
      </if>
      <if test="fxbatstartofsecspreadpip != null">
        fxbatstartofsecspreadpip,
      </if>
      <if test="fxbatendofsec != null">
        fxbatendofsec,
      </if>
      <if test="fxbatendofsecspread != null">
        fxbatendofsecspread,
      </if>
      <if test="fxbatendofsecspreadpip != null">
        fxbatendofsecspreadpip,
      </if>
      <if test="internalcomment != null">
        internalcomment,
      </if>
      <if test="isdisplayedliquidity != null">
        isdisplayedliquidity,
      </if>
      <if test="isdisplaystreaminvolved != null">
        isdisplaystreaminvolved,
      </if>
      <if test="isdisplaystream != null">
        isdisplaystream,
      </if>
      <if test="quotearrivaldelay != null">
        quotearrivaldelay,
      </if>
      <if test="isquotearrivaldelayed != null">
        isquotearrivaldelayed,
      </if>
      <if test="priceafter2secs != null">
        priceafter2secs,
      </if>
      <if test="priceafter4secs != null">
        priceafter4secs,
      </if>
      <if test="priceafter10secs != null">
        priceafter10secs,
      </if>
      <if test="priceafter20secs != null">
        priceafter20secs,
      </if>
      <if test="priceafter30secs != null">
        priceafter30secs,
      </if>
      <if test="priceafter60secs != null">
        priceafter60secs,
      </if>
      <if test="priceprovspreadval != null">
        priceprovspreadval,
      </if>
      <if test="priceprovspreadunits != null">
        priceprovspreadunits,
      </if>
      <if test="quotedspreadfromrateaudit != null">
        quotedspreadfromrateaudit,
      </if>
      <if test="quotedspreadpipsfromrateaudit != null">
        quotedspreadpipsfromrateaudit,
      </if>
      <if test="partial != null">
        partial,
      </if>
      <if test="matchingamount != null">
        matchingamount,
      </if>
      <if test="sweepnumberfromgm != null">
        sweepnumberfromgm,
      </if>
      <if test="tradethroughwrtsweep != null">
        tradethroughwrtsweep,
      </if>
      <if test="traderatevaluetruelife != null">
        traderatevaluetruelife,
      </if>
      <if test="adaptortoislatency != null">
        adaptortoislatency,
      </if>
      <if test="realratesprovider != null">
        realratesprovider,
      </if>
      <if test="realratesstream != null">
        realratesstream,
      </if>
      <if test="streamquotedspreadfromrateaudit != null">
        streamquotedspreadfromrateaudit,
      </if>
      <if test="streamquotedspreadpipsfromrateaudit != null">
        streamquotedspreadpipsfromrateaudit,
      </if>
      <if test="emsratetier != null">
        emsratetier,
      </if>
      <if test="pricejustbeforeemsrate != null">
        pricejustbeforeemsrate,
      </if>
      <if test="priceonesecbeforeemsrate != null">
        priceonesecbeforeemsrate,
      </if>
      <if test="pricetwosecbeforeemsrate != null">
        pricetwosecbeforeemsrate,
      </if>
      <if test="pricethreesecbeforeemsrate != null">
        pricethreesecbeforeemsrate,
      </if>
      <if test="timedistancefromfirstmatchinground != null">
        timedistancefromfirstmatchinground,
      </if>
      <if test="availablevolatmatchingrate != null">
        availablevolatmatchingrate,
      </if>
      <if test="dealtamt != null">
        dealtamt,
      </if>
      <if test="matchingamtusd != null">
        matchingamtusd,
      </if>
      <if test="streamsacceptancepattern != null">
        streamsacceptancepattern,
      </if>
      <if test="streamsacceptancepatterndetails != null">
        streamsacceptancepatterndetails,
      </if>
      <if test="streamsacceptancerefkey != null">
        streamsacceptancerefkey,
      </if>
      <if test="rateefftimeuptoms != null">
        rateefftimeuptoms,
      </if>
      <if test="spreadafter1secs != null">
        spreadafter1secs,
      </if>
      <if test="spreadafter1secspip != null">
        spreadafter1secspip,
      </if>
      <if test="fxbshiftafter1sec != null">
        fxbshiftafter1sec,
      </if>
      <if test="fxbshiftafter1secpip != null">
        fxbshiftafter1secpip,
      </if>
      <if test="fxbshiftafter2sec != null">
        fxbshiftafter2sec,
      </if>
      <if test="fxbshiftafter2secpip != null">
        fxbshiftafter2secpip,
      </if>
      <if test="fxbshiftafter4sec != null">
        fxbshiftafter4sec,
      </if>
      <if test="fxbshiftafter4secpip != null">
        fxbshiftafter4secpip,
      </if>
      <if test="fxbshiftafter10sec != null">
        fxbshiftafter10sec,
      </if>
      <if test="fxbshiftafter10secpip != null">
        fxbshiftafter10secpip,
      </if>
      <if test="fxbshiftafter20sec != null">
        fxbshiftafter20sec,
      </if>
      <if test="fxbshiftafter20secpip != null">
        fxbshiftafter20secpip,
      </if>
      <if test="fxbshiftafter30sec != null">
        fxbshiftafter30sec,
      </if>
      <if test="fxbshiftafter30secpip != null">
        fxbshiftafter30secpip,
      </if>
      <if test="fxbshiftafter60sec != null">
        fxbshiftafter60sec,
      </if>
      <if test="fxbshiftafter60secpip != null">
        fxbshiftafter60secpip,
      </if>
      <if test="ismoreliquiditywithemsquote != null">
        ismoreliquiditywithemsquote,
      </if>
      <if test="ismoreliquiditywithepaquote != null">
        ismoreliquiditywithepaquote,
      </if>
      <if test="ratesentbyadapterlatency != null">
        ratesentbyadapterlatency,
      </if>
      <if test="adapteroutisinlatency != null">
        adapteroutisinlatency,
      </if>
      <if test="midrate != null">
        midrate,
      </if>
      <if test="halfspread != null">
        halfspread,
      </if>
      <if test="halfspreadpip != null">
        halfspreadpip,
      </if>
      <if test="halfspreadbp != null">
        halfspreadbp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="runid != null">
        #{runid,jdbcType=TIMESTAMP},
      </if>
      <if test="tradeid != null">
        #{tradeid,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="mkrtkr != null">
        #{mkrtkr,jdbcType=VARCHAR},
      </if>
      <if test="makerorg != null">
        #{makerorg,jdbcType=VARCHAR},
      </if>
      <if test="takerorg != null">
        #{takerorg,jdbcType=VARCHAR},
      </if>
      <if test="stream != null">
        #{stream,jdbcType=VARCHAR},
      </if>
      <if test="ismultiquoteprvdr != null">
        #{ismultiquoteprvdr,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="tradetype != null">
        #{tradetype,jdbcType=VARCHAR},
      </if>
      <if test="workflow != null">
        #{workflow,jdbcType=VARCHAR},
      </if>
      <if test="origcpty != null">
        #{origcpty,jdbcType=VARCHAR},
      </if>
      <if test="coveredcpty != null">
        #{coveredcpty,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="epaerrorcode != null">
        #{epaerrorcode,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIME},
      </if>
      <if test="ccypair != null">
        #{ccypair,jdbcType=VARCHAR},
      </if>
      <if test="buysell != null">
        #{buysell,jdbcType=VARCHAR},
      </if>
      <if test="basamt != null">
        #{basamt,jdbcType=NUMERIC},
      </if>
      <if test="usdamt != null">
        #{usdamt,jdbcType=NUMERIC},
      </if>
      <if test="isretailtrade != null">
        #{isretailtrade,jdbcType=BIT},
      </if>
      <if test="tradethrough != null">
        #{tradethrough,jdbcType=BIT},
      </if>
      <if test="emsrateguid != null">
        #{emsrateguid,jdbcType=VARCHAR},
      </if>
      <if test="traderateguid != null">
        #{traderateguid,jdbcType=VARCHAR},
      </if>
      <if test="isemsepaguidsame != null">
        #{isemsepaguidsame,jdbcType=BIT},
      </if>
      <if test="emsEparatearrivalcode != null">
        #{emsEparatearrivalcode,jdbcType=INTEGER},
      </if>
      <if test="isenoughliquidity != null">
        #{isenoughliquidity,jdbcType=BIT},
      </if>
      <if test="updatescountatsamems != null">
        #{updatescountatsamems,jdbcType=INTEGER},
      </if>
      <if test="traderatehitcount != null">
        #{traderatehitcount,jdbcType=INTEGER},
      </if>
      <if test="traderatetier != null">
        #{traderatetier,jdbcType=INTEGER},
      </if>
      <if test="traderate != null">
        #{traderate,jdbcType=NUMERIC},
      </if>
      <if test="prevailingprice != null">
        #{prevailingprice,jdbcType=NUMERIC},
      </if>
      <if test="changeinprice != null">
        #{changeinprice,jdbcType=NUMERIC},
      </if>
      <if test="cpriceimpr != null">
        #{cpriceimpr,jdbcType=BIT},
      </if>
      <if test="ppriceimpr != null">
        #{ppriceimpr,jdbcType=BIT},
      </if>
      <if test="numberofeventsmissed != null">
        #{numberofeventsmissed,jdbcType=INTEGER},
      </if>
      <if test="rateeventlifetimeMs != null">
        #{rateeventlifetimeMs,jdbcType=INTEGER},
      </if>
      <if test="ratevaluelifetimeMs != null">
        #{ratevaluelifetimeMs,jdbcType=INTEGER},
      </if>
      <if test="ratebucket != null">
        #{ratebucket,jdbcType=VARCHAR},
      </if>
      <if test="ratestatus != null">
        #{ratestatus,jdbcType=VARCHAR},
      </if>
      <if test="resiliencyfactor != null">
        #{resiliencyfactor,jdbcType=NUMERIC},
      </if>
      <if test="isresilient != null">
        #{isresilient,jdbcType=BIT},
      </if>
      <if test="edgetradingmarginms != null">
        #{edgetradingmarginms,jdbcType=INTEGER},
      </if>
      <if test="staleratemarginms != null">
        #{staleratemarginms,jdbcType=INTEGER},
      </if>
      <if test="isedgetrading50 != null">
        #{isedgetrading50,jdbcType=BIT},
      </if>
      <if test="isedgetrading10 != null">
        #{isedgetrading10,jdbcType=BIT},
      </if>
      <if test="quotedspread != null">
        #{quotedspread,jdbcType=NUMERIC},
      </if>
      <if test="effectivespread != null">
        #{effectivespread,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter2secs != null">
        #{spreadafter2secs,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter4secs != null">
        #{spreadafter4secs,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter10secs != null">
        #{spreadafter10secs,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter20secs != null">
        #{spreadafter20secs,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter30secs != null">
        #{spreadafter30secs,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter60secs != null">
        #{spreadafter60secs,jdbcType=NUMERIC},
      </if>
      <if test="cwin2secs != null">
        #{cwin2secs,jdbcType=BIT},
      </if>
      <if test="cwin4secs != null">
        #{cwin4secs,jdbcType=BIT},
      </if>
      <if test="istraderate1sided != null">
        #{istraderate1sided,jdbcType=BIT},
      </if>
      <if test="isnextrate1sided != null">
        #{isnextrate1sided,jdbcType=BIT},
      </if>
      <if test="responsetime != null">
        #{responsetime,jdbcType=INTEGER},
      </if>
      <if test="pricediscoverytime != null">
        #{pricediscoverytime,jdbcType=INTEGER},
      </if>
      <if test="insidespread != null">
        #{insidespread,jdbcType=NUMERIC},
      </if>
      <if test="ismktsnapparsed != null">
        #{ismktsnapparsed,jdbcType=BIT},
      </if>
      <if test="isauditlogparsed != null">
        #{isauditlogparsed,jdbcType=BIT},
      </if>
      <if test="virtualserver != null">
        #{virtualserver,jdbcType=VARCHAR},
      </if>
      <if test="costusd != null">
        #{costusd,jdbcType=NUMERIC},
      </if>
      <if test="quotedspreadpip != null">
        #{quotedspreadpip,jdbcType=NUMERIC},
      </if>
      <if test="effectivespreadpip != null">
        #{effectivespreadpip,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter2secspip != null">
        #{spreadafter2secspip,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter4secspip != null">
        #{spreadafter4secspip,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter10secspip != null">
        #{spreadafter10secspip,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter20secspip != null">
        #{spreadafter20secspip,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter30secspip != null">
        #{spreadafter30secspip,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter60secspip != null">
        #{spreadafter60secspip,jdbcType=NUMERIC},
      </if>
      <if test="insidespreadcostusd != null">
        #{insidespreadcostusd,jdbcType=NUMERIC},
      </if>
      <if test="insidespreadpip != null">
        #{insidespreadpip,jdbcType=NUMERIC},
      </if>
      <if test="tradematchround != null">
        #{tradematchround,jdbcType=INTEGER},
      </if>
      <if test="nextbestprice != null">
        #{nextbestprice,jdbcType=NUMERIC},
      </if>
      <if test="nextbestprvdr != null">
        #{nextbestprvdr,jdbcType=VARCHAR},
      </if>
      <if test="slippagewrtnextbestprice != null">
        #{slippagewrtnextbestprice,jdbcType=NUMERIC},
      </if>
      <if test="nextbestpricemissedbyms != null">
        #{nextbestpricemissedbyms,jdbcType=INTEGER},
      </if>
      <if test="timeelapsedsinceemsrate != null">
        #{timeelapsedsinceemsrate,jdbcType=INTEGER},
      </if>
      <if test="timeelapsedsinceprevrate != null">
        #{timeelapsedsinceprevrate,jdbcType=INTEGER},
      </if>
      <if test="eventsmissedafteremsrate != null">
        #{eventsmissedafteremsrate,jdbcType=INTEGER},
      </if>
      <if test="postemsratemissedeventsat != null">
        #{postemsratemissedeventsat,jdbcType=VARCHAR},
      </if>
      <if test="emsmatchingduration != null">
        #{emsmatchingduration,jdbcType=INTEGER},
      </if>
      <if test="serveracceptanceduration != null">
        #{serveracceptanceduration,jdbcType=INTEGER},
      </if>
      <if test="serverresponseduration != null">
        #{serverresponseduration,jdbcType=INTEGER},
      </if>
      <if test="tradesizebucket != null">
        #{tradesizebucket,jdbcType=VARCHAR},
      </if>
      <if test="ratesrelatederrorcode != null">
        #{ratesrelatederrorcode,jdbcType=VARCHAR},
      </if>
      <if test="snapshotrelatederrorcode != null">
        #{snapshotrelatederrorcode,jdbcType=VARCHAR},
      </if>
      <if test="rateauditrelatederrorcode != null">
        #{rateauditrelatederrorcode,jdbcType=VARCHAR},
      </if>
      <if test="ishistoricalmatch != null">
        #{ishistoricalmatch,jdbcType=VARCHAR},
      </if>
      <if test="tieracceptancepattern != null">
        #{tieracceptancepattern,jdbcType=VARCHAR},
      </if>
      <if test="istieracceptanceconsistent != null">
        #{istieracceptanceconsistent,jdbcType=BIT},
      </if>
      <if test="takerisbroker != null">
        #{takerisbroker,jdbcType=BIT},
      </if>
      <if test="makerisbroker != null">
        #{makerisbroker,jdbcType=BIT},
      </if>
      <if test="tradescount2secpast != null">
        #{tradescount2secpast,jdbcType=INTEGER},
      </if>
      <if test="tradescount250mspast != null">
        #{tradescount250mspast,jdbcType=INTEGER},
      </if>
      <if test="tradescountwithlastquote != null">
        #{tradescountwithlastquote,jdbcType=INTEGER},
      </if>
      <if test="tradesvolume2secpast != null">
        #{tradesvolume2secpast,jdbcType=BIGINT},
      </if>
      <if test="tradesvolume250mspast != null">
        #{tradesvolume250mspast,jdbcType=BIGINT},
      </if>
      <if test="tradesvolumewithlastquote != null">
        #{tradesvolumewithlastquote,jdbcType=BIGINT},
      </if>
      <if test="liquiditywithlastquote != null">
        #{liquiditywithlastquote,jdbcType=BIGINT},
      </if>
      <if test="fxbatstartofsec != null">
        #{fxbatstartofsec,jdbcType=NUMERIC},
      </if>
      <if test="fxbatstartofsecspread != null">
        #{fxbatstartofsecspread,jdbcType=NUMERIC},
      </if>
      <if test="fxbatstartofsecspreadpip != null">
        #{fxbatstartofsecspreadpip,jdbcType=NUMERIC},
      </if>
      <if test="fxbatendofsec != null">
        #{fxbatendofsec,jdbcType=NUMERIC},
      </if>
      <if test="fxbatendofsecspread != null">
        #{fxbatendofsecspread,jdbcType=NUMERIC},
      </if>
      <if test="fxbatendofsecspreadpip != null">
        #{fxbatendofsecspreadpip,jdbcType=NUMERIC},
      </if>
      <if test="internalcomment != null">
        #{internalcomment,jdbcType=VARCHAR},
      </if>
      <if test="isdisplayedliquidity != null">
        #{isdisplayedliquidity,jdbcType=BIT},
      </if>
      <if test="isdisplaystreaminvolved != null">
        #{isdisplaystreaminvolved,jdbcType=BIT},
      </if>
      <if test="isdisplaystream != null">
        #{isdisplaystream,jdbcType=BIT},
      </if>
      <if test="quotearrivaldelay != null">
        #{quotearrivaldelay,jdbcType=INTEGER},
      </if>
      <if test="isquotearrivaldelayed != null">
        #{isquotearrivaldelayed,jdbcType=BIT},
      </if>
      <if test="priceafter2secs != null">
        #{priceafter2secs,jdbcType=NUMERIC},
      </if>
      <if test="priceafter4secs != null">
        #{priceafter4secs,jdbcType=NUMERIC},
      </if>
      <if test="priceafter10secs != null">
        #{priceafter10secs,jdbcType=NUMERIC},
      </if>
      <if test="priceafter20secs != null">
        #{priceafter20secs,jdbcType=NUMERIC},
      </if>
      <if test="priceafter30secs != null">
        #{priceafter30secs,jdbcType=NUMERIC},
      </if>
      <if test="priceafter60secs != null">
        #{priceafter60secs,jdbcType=NUMERIC},
      </if>
      <if test="priceprovspreadval != null">
        #{priceprovspreadval,jdbcType=NUMERIC},
      </if>
      <if test="priceprovspreadunits != null">
        #{priceprovspreadunits,jdbcType=VARCHAR},
      </if>
      <if test="quotedspreadfromrateaudit != null">
        #{quotedspreadfromrateaudit,jdbcType=NUMERIC},
      </if>
      <if test="quotedspreadpipsfromrateaudit != null">
        #{quotedspreadpipsfromrateaudit,jdbcType=NUMERIC},
      </if>
      <if test="partial != null">
        #{partial,jdbcType=VARCHAR},
      </if>
      <if test="matchingamount != null">
        #{matchingamount,jdbcType=NUMERIC},
      </if>
      <if test="sweepnumberfromgm != null">
        #{sweepnumberfromgm,jdbcType=INTEGER},
      </if>
      <if test="tradethroughwrtsweep != null">
        #{tradethroughwrtsweep,jdbcType=BIT},
      </if>
      <if test="traderatevaluetruelife != null">
        #{traderatevaluetruelife,jdbcType=BIGINT},
      </if>
      <if test="adaptortoislatency != null">
        #{adaptortoislatency,jdbcType=BIGINT},
      </if>
      <if test="realratesprovider != null">
        #{realratesprovider,jdbcType=VARCHAR},
      </if>
      <if test="realratesstream != null">
        #{realratesstream,jdbcType=VARCHAR},
      </if>
      <if test="streamquotedspreadfromrateaudit != null">
        #{streamquotedspreadfromrateaudit,jdbcType=NUMERIC},
      </if>
      <if test="streamquotedspreadpipsfromrateaudit != null">
        #{streamquotedspreadpipsfromrateaudit,jdbcType=NUMERIC},
      </if>
      <if test="emsratetier != null">
        #{emsratetier,jdbcType=INTEGER},
      </if>
      <if test="pricejustbeforeemsrate != null">
        #{pricejustbeforeemsrate,jdbcType=NUMERIC},
      </if>
      <if test="priceonesecbeforeemsrate != null">
        #{priceonesecbeforeemsrate,jdbcType=NUMERIC},
      </if>
      <if test="pricetwosecbeforeemsrate != null">
        #{pricetwosecbeforeemsrate,jdbcType=NUMERIC},
      </if>
      <if test="pricethreesecbeforeemsrate != null">
        #{pricethreesecbeforeemsrate,jdbcType=NUMERIC},
      </if>
      <if test="timedistancefromfirstmatchinground != null">
        #{timedistancefromfirstmatchinground,jdbcType=BIGINT},
      </if>
      <if test="availablevolatmatchingrate != null">
        #{availablevolatmatchingrate,jdbcType=NUMERIC},
      </if>
      <if test="dealtamt != null">
        #{dealtamt,jdbcType=NUMERIC},
      </if>
      <if test="matchingamtusd != null">
        #{matchingamtusd,jdbcType=NUMERIC},
      </if>
      <if test="streamsacceptancepattern != null">
        #{streamsacceptancepattern,jdbcType=VARCHAR},
      </if>
      <if test="streamsacceptancepatterndetails != null">
        #{streamsacceptancepatterndetails,jdbcType=VARCHAR},
      </if>
      <if test="streamsacceptancerefkey != null">
        #{streamsacceptancerefkey,jdbcType=NUMERIC},
      </if>
      <if test="rateefftimeuptoms != null">
        #{rateefftimeuptoms,jdbcType=BIT},
      </if>
      <if test="spreadafter1secs != null">
        #{spreadafter1secs,jdbcType=NUMERIC},
      </if>
      <if test="spreadafter1secspip != null">
        #{spreadafter1secspip,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter1sec != null">
        #{fxbshiftafter1sec,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter1secpip != null">
        #{fxbshiftafter1secpip,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter2sec != null">
        #{fxbshiftafter2sec,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter2secpip != null">
        #{fxbshiftafter2secpip,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter4sec != null">
        #{fxbshiftafter4sec,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter4secpip != null">
        #{fxbshiftafter4secpip,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter10sec != null">
        #{fxbshiftafter10sec,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter10secpip != null">
        #{fxbshiftafter10secpip,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter20sec != null">
        #{fxbshiftafter20sec,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter20secpip != null">
        #{fxbshiftafter20secpip,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter30sec != null">
        #{fxbshiftafter30sec,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter30secpip != null">
        #{fxbshiftafter30secpip,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter60sec != null">
        #{fxbshiftafter60sec,jdbcType=NUMERIC},
      </if>
      <if test="fxbshiftafter60secpip != null">
        #{fxbshiftafter60secpip,jdbcType=NUMERIC},
      </if>
      <if test="ismoreliquiditywithemsquote != null">
        #{ismoreliquiditywithemsquote,jdbcType=BIT},
      </if>
      <if test="ismoreliquiditywithepaquote != null">
        #{ismoreliquiditywithepaquote,jdbcType=BIT},
      </if>
      <if test="ratesentbyadapterlatency != null">
        #{ratesentbyadapterlatency,jdbcType=NUMERIC},
      </if>
      <if test="adapteroutisinlatency != null">
        #{adapteroutisinlatency,jdbcType=NUMERIC},
      </if>
      <if test="midrate != null">
        #{midrate,jdbcType=NUMERIC},
      </if>
      <if test="halfspread != null">
        #{halfspread,jdbcType=NUMERIC},
      </if>
      <if test="halfspreadpip != null">
        #{halfspreadpip,jdbcType=NUMERIC},
      </if>
      <if test="halfspreadbp != null">
        #{halfspreadbp,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.integral.ds.tradeepafieldupdater.model.InternalTradeEpa022016Example" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    select count(*) from internal_trade_epa_02_2016
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    update internal_trade_epa_02_2016
    <set>
      <if test="record.runid != null">
        runid = #{record.runid,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tradeid != null">
        tradeid = #{record.tradeid,jdbcType=VARCHAR},
      </if>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.mkrtkr != null">
        mkrtkr = #{record.mkrtkr,jdbcType=VARCHAR},
      </if>
      <if test="record.makerorg != null">
        makerorg = #{record.makerorg,jdbcType=VARCHAR},
      </if>
      <if test="record.takerorg != null">
        takerorg = #{record.takerorg,jdbcType=VARCHAR},
      </if>
      <if test="record.stream != null">
        stream = #{record.stream,jdbcType=VARCHAR},
      </if>
      <if test="record.ismultiquoteprvdr != null">
        ismultiquoteprvdr = #{record.ismultiquoteprvdr,jdbcType=BIT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.tradetype != null">
        tradetype = #{record.tradetype,jdbcType=VARCHAR},
      </if>
      <if test="record.workflow != null">
        workflow = #{record.workflow,jdbcType=VARCHAR},
      </if>
      <if test="record.origcpty != null">
        origcpty = #{record.origcpty,jdbcType=VARCHAR},
      </if>
      <if test="record.coveredcpty != null">
        coveredcpty = #{record.coveredcpty,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.epaerrorcode != null">
        epaerrorcode = #{record.epaerrorcode,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIME},
      </if>
      <if test="record.ccypair != null">
        ccypair = #{record.ccypair,jdbcType=VARCHAR},
      </if>
      <if test="record.buysell != null">
        buysell = #{record.buysell,jdbcType=VARCHAR},
      </if>
      <if test="record.basamt != null">
        basamt = #{record.basamt,jdbcType=NUMERIC},
      </if>
      <if test="record.usdamt != null">
        usdamt = #{record.usdamt,jdbcType=NUMERIC},
      </if>
      <if test="record.isretailtrade != null">
        isretailtrade = #{record.isretailtrade,jdbcType=BIT},
      </if>
      <if test="record.tradethrough != null">
        tradethrough = #{record.tradethrough,jdbcType=BIT},
      </if>
      <if test="record.emsrateguid != null">
        emsrateguid = #{record.emsrateguid,jdbcType=VARCHAR},
      </if>
      <if test="record.traderateguid != null">
        traderateguid = #{record.traderateguid,jdbcType=VARCHAR},
      </if>
      <if test="record.isemsepaguidsame != null">
        isemsepaguidsame = #{record.isemsepaguidsame,jdbcType=BIT},
      </if>
      <if test="record.emsEparatearrivalcode != null">
        ems_eparatearrivalcode = #{record.emsEparatearrivalcode,jdbcType=INTEGER},
      </if>
      <if test="record.isenoughliquidity != null">
        isenoughliquidity = #{record.isenoughliquidity,jdbcType=BIT},
      </if>
      <if test="record.updatescountatsamems != null">
        updatescountatsamems = #{record.updatescountatsamems,jdbcType=INTEGER},
      </if>
      <if test="record.traderatehitcount != null">
        traderatehitcount = #{record.traderatehitcount,jdbcType=INTEGER},
      </if>
      <if test="record.traderatetier != null">
        traderatetier = #{record.traderatetier,jdbcType=INTEGER},
      </if>
      <if test="record.traderate != null">
        traderate = #{record.traderate,jdbcType=NUMERIC},
      </if>
      <if test="record.prevailingprice != null">
        prevailingprice = #{record.prevailingprice,jdbcType=NUMERIC},
      </if>
      <if test="record.changeinprice != null">
        changeinprice = #{record.changeinprice,jdbcType=NUMERIC},
      </if>
      <if test="record.cpriceimpr != null">
        cpriceimpr = #{record.cpriceimpr,jdbcType=BIT},
      </if>
      <if test="record.ppriceimpr != null">
        ppriceimpr = #{record.ppriceimpr,jdbcType=BIT},
      </if>
      <if test="record.numberofeventsmissed != null">
        numberofeventsmissed = #{record.numberofeventsmissed,jdbcType=INTEGER},
      </if>
      <if test="record.rateeventlifetimeMs != null">
        rateeventlifetime_ms = #{record.rateeventlifetimeMs,jdbcType=INTEGER},
      </if>
      <if test="record.ratevaluelifetimeMs != null">
        ratevaluelifetime_ms = #{record.ratevaluelifetimeMs,jdbcType=INTEGER},
      </if>
      <if test="record.ratebucket != null">
        ratebucket = #{record.ratebucket,jdbcType=VARCHAR},
      </if>
      <if test="record.ratestatus != null">
        ratestatus = #{record.ratestatus,jdbcType=VARCHAR},
      </if>
      <if test="record.resiliencyfactor != null">
        resiliencyfactor = #{record.resiliencyfactor,jdbcType=NUMERIC},
      </if>
      <if test="record.isresilient != null">
        isresilient = #{record.isresilient,jdbcType=BIT},
      </if>
      <if test="record.edgetradingmarginms != null">
        edgetradingmarginms = #{record.edgetradingmarginms,jdbcType=INTEGER},
      </if>
      <if test="record.staleratemarginms != null">
        staleratemarginms = #{record.staleratemarginms,jdbcType=INTEGER},
      </if>
      <if test="record.isedgetrading50 != null">
        isedgetrading_50 = #{record.isedgetrading50,jdbcType=BIT},
      </if>
      <if test="record.isedgetrading10 != null">
        isedgetrading_10 = #{record.isedgetrading10,jdbcType=BIT},
      </if>
      <if test="record.quotedspread != null">
        quotedspread = #{record.quotedspread,jdbcType=NUMERIC},
      </if>
      <if test="record.effectivespread != null">
        effectivespread = #{record.effectivespread,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter2secs != null">
        spreadafter2secs = #{record.spreadafter2secs,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter4secs != null">
        spreadafter4secs = #{record.spreadafter4secs,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter10secs != null">
        spreadafter10secs = #{record.spreadafter10secs,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter20secs != null">
        spreadafter20secs = #{record.spreadafter20secs,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter30secs != null">
        spreadafter30secs = #{record.spreadafter30secs,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter60secs != null">
        spreadafter60secs = #{record.spreadafter60secs,jdbcType=NUMERIC},
      </if>
      <if test="record.cwin2secs != null">
        cwin2secs = #{record.cwin2secs,jdbcType=BIT},
      </if>
      <if test="record.cwin4secs != null">
        cwin4secs = #{record.cwin4secs,jdbcType=BIT},
      </if>
      <if test="record.istraderate1sided != null">
        istraderate1sided = #{record.istraderate1sided,jdbcType=BIT},
      </if>
      <if test="record.isnextrate1sided != null">
        isnextrate1sided = #{record.isnextrate1sided,jdbcType=BIT},
      </if>
      <if test="record.responsetime != null">
        responsetime = #{record.responsetime,jdbcType=INTEGER},
      </if>
      <if test="record.pricediscoverytime != null">
        pricediscoverytime = #{record.pricediscoverytime,jdbcType=INTEGER},
      </if>
      <if test="record.insidespread != null">
        insidespread = #{record.insidespread,jdbcType=NUMERIC},
      </if>
      <if test="record.ismktsnapparsed != null">
        ismktsnapparsed = #{record.ismktsnapparsed,jdbcType=BIT},
      </if>
      <if test="record.isauditlogparsed != null">
        isauditlogparsed = #{record.isauditlogparsed,jdbcType=BIT},
      </if>
      <if test="record.virtualserver != null">
        virtualserver = #{record.virtualserver,jdbcType=VARCHAR},
      </if>
      <if test="record.costusd != null">
        costusd = #{record.costusd,jdbcType=NUMERIC},
      </if>
      <if test="record.quotedspreadpip != null">
        quotedspreadpip = #{record.quotedspreadpip,jdbcType=NUMERIC},
      </if>
      <if test="record.effectivespreadpip != null">
        effectivespreadpip = #{record.effectivespreadpip,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter2secspip != null">
        spreadafter2secspip = #{record.spreadafter2secspip,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter4secspip != null">
        spreadafter4secspip = #{record.spreadafter4secspip,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter10secspip != null">
        spreadafter10secspip = #{record.spreadafter10secspip,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter20secspip != null">
        spreadafter20secspip = #{record.spreadafter20secspip,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter30secspip != null">
        spreadafter30secspip = #{record.spreadafter30secspip,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter60secspip != null">
        spreadafter60secspip = #{record.spreadafter60secspip,jdbcType=NUMERIC},
      </if>
      <if test="record.insidespreadcostusd != null">
        insidespreadcostusd = #{record.insidespreadcostusd,jdbcType=NUMERIC},
      </if>
      <if test="record.insidespreadpip != null">
        insidespreadpip = #{record.insidespreadpip,jdbcType=NUMERIC},
      </if>
      <if test="record.tradematchround != null">
        tradematchround = #{record.tradematchround,jdbcType=INTEGER},
      </if>
      <if test="record.nextbestprice != null">
        nextbestprice = #{record.nextbestprice,jdbcType=NUMERIC},
      </if>
      <if test="record.nextbestprvdr != null">
        nextbestprvdr = #{record.nextbestprvdr,jdbcType=VARCHAR},
      </if>
      <if test="record.slippagewrtnextbestprice != null">
        slippagewrtnextbestprice = #{record.slippagewrtnextbestprice,jdbcType=NUMERIC},
      </if>
      <if test="record.nextbestpricemissedbyms != null">
        nextbestpricemissedbyms = #{record.nextbestpricemissedbyms,jdbcType=INTEGER},
      </if>
      <if test="record.timeelapsedsinceemsrate != null">
        timeelapsedsinceemsrate = #{record.timeelapsedsinceemsrate,jdbcType=INTEGER},
      </if>
      <if test="record.timeelapsedsinceprevrate != null">
        timeelapsedsinceprevrate = #{record.timeelapsedsinceprevrate,jdbcType=INTEGER},
      </if>
      <if test="record.eventsmissedafteremsrate != null">
        eventsmissedafteremsrate = #{record.eventsmissedafteremsrate,jdbcType=INTEGER},
      </if>
      <if test="record.postemsratemissedeventsat != null">
        postemsratemissedeventsat = #{record.postemsratemissedeventsat,jdbcType=VARCHAR},
      </if>
      <if test="record.emsmatchingduration != null">
        emsmatchingduration = #{record.emsmatchingduration,jdbcType=INTEGER},
      </if>
      <if test="record.serveracceptanceduration != null">
        serveracceptanceduration = #{record.serveracceptanceduration,jdbcType=INTEGER},
      </if>
      <if test="record.serverresponseduration != null">
        serverresponseduration = #{record.serverresponseduration,jdbcType=INTEGER},
      </if>
      <if test="record.tradesizebucket != null">
        tradesizebucket = #{record.tradesizebucket,jdbcType=VARCHAR},
      </if>
      <if test="record.ratesrelatederrorcode != null">
        ratesrelatederrorcode = #{record.ratesrelatederrorcode,jdbcType=VARCHAR},
      </if>
      <if test="record.snapshotrelatederrorcode != null">
        snapshotrelatederrorcode = #{record.snapshotrelatederrorcode,jdbcType=VARCHAR},
      </if>
      <if test="record.rateauditrelatederrorcode != null">
        rateauditrelatederrorcode = #{record.rateauditrelatederrorcode,jdbcType=VARCHAR},
      </if>
      <if test="record.ishistoricalmatch != null">
        ishistoricalmatch = #{record.ishistoricalmatch,jdbcType=VARCHAR},
      </if>
      <if test="record.tieracceptancepattern != null">
        tieracceptancepattern = #{record.tieracceptancepattern,jdbcType=VARCHAR},
      </if>
      <if test="record.istieracceptanceconsistent != null">
        istieracceptanceconsistent = #{record.istieracceptanceconsistent,jdbcType=BIT},
      </if>
      <if test="record.takerisbroker != null">
        takerisbroker = #{record.takerisbroker,jdbcType=BIT},
      </if>
      <if test="record.makerisbroker != null">
        makerisbroker = #{record.makerisbroker,jdbcType=BIT},
      </if>
      <if test="record.tradescount2secpast != null">
        tradescount2secpast = #{record.tradescount2secpast,jdbcType=INTEGER},
      </if>
      <if test="record.tradescount250mspast != null">
        tradescount250mspast = #{record.tradescount250mspast,jdbcType=INTEGER},
      </if>
      <if test="record.tradescountwithlastquote != null">
        tradescountwithlastquote = #{record.tradescountwithlastquote,jdbcType=INTEGER},
      </if>
      <if test="record.tradesvolume2secpast != null">
        tradesvolume2secpast = #{record.tradesvolume2secpast,jdbcType=BIGINT},
      </if>
      <if test="record.tradesvolume250mspast != null">
        tradesvolume250mspast = #{record.tradesvolume250mspast,jdbcType=BIGINT},
      </if>
      <if test="record.tradesvolumewithlastquote != null">
        tradesvolumewithlastquote = #{record.tradesvolumewithlastquote,jdbcType=BIGINT},
      </if>
      <if test="record.liquiditywithlastquote != null">
        liquiditywithlastquote = #{record.liquiditywithlastquote,jdbcType=BIGINT},
      </if>
      <if test="record.fxbatstartofsec != null">
        fxbatstartofsec = #{record.fxbatstartofsec,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbatstartofsecspread != null">
        fxbatstartofsecspread = #{record.fxbatstartofsecspread,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbatstartofsecspreadpip != null">
        fxbatstartofsecspreadpip = #{record.fxbatstartofsecspreadpip,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbatendofsec != null">
        fxbatendofsec = #{record.fxbatendofsec,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbatendofsecspread != null">
        fxbatendofsecspread = #{record.fxbatendofsecspread,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbatendofsecspreadpip != null">
        fxbatendofsecspreadpip = #{record.fxbatendofsecspreadpip,jdbcType=NUMERIC},
      </if>
      <if test="record.internalcomment != null">
        internalcomment = #{record.internalcomment,jdbcType=VARCHAR},
      </if>
      <if test="record.isdisplayedliquidity != null">
        isdisplayedliquidity = #{record.isdisplayedliquidity,jdbcType=BIT},
      </if>
      <if test="record.isdisplaystreaminvolved != null">
        isdisplaystreaminvolved = #{record.isdisplaystreaminvolved,jdbcType=BIT},
      </if>
      <if test="record.isdisplaystream != null">
        isdisplaystream = #{record.isdisplaystream,jdbcType=BIT},
      </if>
      <if test="record.quotearrivaldelay != null">
        quotearrivaldelay = #{record.quotearrivaldelay,jdbcType=INTEGER},
      </if>
      <if test="record.isquotearrivaldelayed != null">
        isquotearrivaldelayed = #{record.isquotearrivaldelayed,jdbcType=BIT},
      </if>
      <if test="record.priceafter2secs != null">
        priceafter2secs = #{record.priceafter2secs,jdbcType=NUMERIC},
      </if>
      <if test="record.priceafter4secs != null">
        priceafter4secs = #{record.priceafter4secs,jdbcType=NUMERIC},
      </if>
      <if test="record.priceafter10secs != null">
        priceafter10secs = #{record.priceafter10secs,jdbcType=NUMERIC},
      </if>
      <if test="record.priceafter20secs != null">
        priceafter20secs = #{record.priceafter20secs,jdbcType=NUMERIC},
      </if>
      <if test="record.priceafter30secs != null">
        priceafter30secs = #{record.priceafter30secs,jdbcType=NUMERIC},
      </if>
      <if test="record.priceafter60secs != null">
        priceafter60secs = #{record.priceafter60secs,jdbcType=NUMERIC},
      </if>
      <if test="record.priceprovspreadval != null">
        priceprovspreadval = #{record.priceprovspreadval,jdbcType=NUMERIC},
      </if>
      <if test="record.priceprovspreadunits != null">
        priceprovspreadunits = #{record.priceprovspreadunits,jdbcType=VARCHAR},
      </if>
      <if test="record.quotedspreadfromrateaudit != null">
        quotedspreadfromrateaudit = #{record.quotedspreadfromrateaudit,jdbcType=NUMERIC},
      </if>
      <if test="record.quotedspreadpipsfromrateaudit != null">
        quotedspreadpipsfromrateaudit = #{record.quotedspreadpipsfromrateaudit,jdbcType=NUMERIC},
      </if>
      <if test="record.partial != null">
        partial = #{record.partial,jdbcType=VARCHAR},
      </if>
      <if test="record.matchingamount != null">
        matchingamount = #{record.matchingamount,jdbcType=NUMERIC},
      </if>
      <if test="record.sweepnumberfromgm != null">
        sweepnumberfromgm = #{record.sweepnumberfromgm,jdbcType=INTEGER},
      </if>
      <if test="record.tradethroughwrtsweep != null">
        tradethroughwrtsweep = #{record.tradethroughwrtsweep,jdbcType=BIT},
      </if>
      <if test="record.traderatevaluetruelife != null">
        traderatevaluetruelife = #{record.traderatevaluetruelife,jdbcType=BIGINT},
      </if>
      <if test="record.adaptortoislatency != null">
        adaptortoislatency = #{record.adaptortoislatency,jdbcType=BIGINT},
      </if>
      <if test="record.realratesprovider != null">
        realratesprovider = #{record.realratesprovider,jdbcType=VARCHAR},
      </if>
      <if test="record.realratesstream != null">
        realratesstream = #{record.realratesstream,jdbcType=VARCHAR},
      </if>
      <if test="record.streamquotedspreadfromrateaudit != null">
        streamquotedspreadfromrateaudit = #{record.streamquotedspreadfromrateaudit,jdbcType=NUMERIC},
      </if>
      <if test="record.streamquotedspreadpipsfromrateaudit != null">
        streamquotedspreadpipsfromrateaudit = #{record.streamquotedspreadpipsfromrateaudit,jdbcType=NUMERIC},
      </if>
      <if test="record.emsratetier != null">
        emsratetier = #{record.emsratetier,jdbcType=INTEGER},
      </if>
      <if test="record.pricejustbeforeemsrate != null">
        pricejustbeforeemsrate = #{record.pricejustbeforeemsrate,jdbcType=NUMERIC},
      </if>
      <if test="record.priceonesecbeforeemsrate != null">
        priceonesecbeforeemsrate = #{record.priceonesecbeforeemsrate,jdbcType=NUMERIC},
      </if>
      <if test="record.pricetwosecbeforeemsrate != null">
        pricetwosecbeforeemsrate = #{record.pricetwosecbeforeemsrate,jdbcType=NUMERIC},
      </if>
      <if test="record.pricethreesecbeforeemsrate != null">
        pricethreesecbeforeemsrate = #{record.pricethreesecbeforeemsrate,jdbcType=NUMERIC},
      </if>
      <if test="record.timedistancefromfirstmatchinground != null">
        timedistancefromfirstmatchinground = #{record.timedistancefromfirstmatchinground,jdbcType=BIGINT},
      </if>
      <if test="record.availablevolatmatchingrate != null">
        availablevolatmatchingrate = #{record.availablevolatmatchingrate,jdbcType=NUMERIC},
      </if>
      <if test="record.dealtamt != null">
        dealtamt = #{record.dealtamt,jdbcType=NUMERIC},
      </if>
      <if test="record.matchingamtusd != null">
        matchingamtusd = #{record.matchingamtusd,jdbcType=NUMERIC},
      </if>
      <if test="record.streamsacceptancepattern != null">
        streamsacceptancepattern = #{record.streamsacceptancepattern,jdbcType=VARCHAR},
      </if>
      <if test="record.streamsacceptancepatterndetails != null">
        streamsacceptancepatterndetails = #{record.streamsacceptancepatterndetails,jdbcType=VARCHAR},
      </if>
      <if test="record.streamsacceptancerefkey != null">
        streamsacceptancerefkey = #{record.streamsacceptancerefkey,jdbcType=NUMERIC},
      </if>
      <if test="record.rateefftimeuptoms != null">
        rateefftimeuptoms = #{record.rateefftimeuptoms,jdbcType=BIT},
      </if>
      <if test="record.spreadafter1secs != null">
        spreadafter1secs = #{record.spreadafter1secs,jdbcType=NUMERIC},
      </if>
      <if test="record.spreadafter1secspip != null">
        spreadafter1secspip = #{record.spreadafter1secspip,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter1sec != null">
        fxbshiftafter1sec = #{record.fxbshiftafter1sec,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter1secpip != null">
        fxbshiftafter1secpip = #{record.fxbshiftafter1secpip,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter2sec != null">
        fxbshiftafter2sec = #{record.fxbshiftafter2sec,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter2secpip != null">
        fxbshiftafter2secpip = #{record.fxbshiftafter2secpip,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter4sec != null">
        fxbshiftafter4sec = #{record.fxbshiftafter4sec,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter4secpip != null">
        fxbshiftafter4secpip = #{record.fxbshiftafter4secpip,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter10sec != null">
        fxbshiftafter10sec = #{record.fxbshiftafter10sec,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter10secpip != null">
        fxbshiftafter10secpip = #{record.fxbshiftafter10secpip,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter20sec != null">
        fxbshiftafter20sec = #{record.fxbshiftafter20sec,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter20secpip != null">
        fxbshiftafter20secpip = #{record.fxbshiftafter20secpip,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter30sec != null">
        fxbshiftafter30sec = #{record.fxbshiftafter30sec,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter30secpip != null">
        fxbshiftafter30secpip = #{record.fxbshiftafter30secpip,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter60sec != null">
        fxbshiftafter60sec = #{record.fxbshiftafter60sec,jdbcType=NUMERIC},
      </if>
      <if test="record.fxbshiftafter60secpip != null">
        fxbshiftafter60secpip = #{record.fxbshiftafter60secpip,jdbcType=NUMERIC},
      </if>
      <if test="record.ismoreliquiditywithemsquote != null">
        ismoreliquiditywithemsquote = #{record.ismoreliquiditywithemsquote,jdbcType=BIT},
      </if>
      <if test="record.ismoreliquiditywithepaquote != null">
        ismoreliquiditywithepaquote = #{record.ismoreliquiditywithepaquote,jdbcType=BIT},
      </if>
      <if test="record.ratesentbyadapterlatency != null">
        ratesentbyadapterlatency = #{record.ratesentbyadapterlatency,jdbcType=NUMERIC},
      </if>
      <if test="record.adapteroutisinlatency != null">
        adapteroutisinlatency = #{record.adapteroutisinlatency,jdbcType=NUMERIC},
      </if>
      <if test="record.midrate != null">
        midrate = #{record.midrate,jdbcType=NUMERIC},
      </if>
      <if test="record.halfspread != null">
        halfspread = #{record.halfspread,jdbcType=NUMERIC},
      </if>
      <if test="record.halfspreadpip != null">
        halfspreadpip = #{record.halfspreadpip,jdbcType=NUMERIC},
      </if>
      <if test="record.halfspreadbp != null">
        halfspreadbp = #{record.halfspreadbp,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Feb 08 13:18:32 COT 2016.
    -->
    update internal_trade_epa_02_2016
    set runid = #{record.runid,jdbcType=TIMESTAMP},
      tradeid = #{record.tradeid,jdbcType=VARCHAR},
      orderid = #{record.orderid,jdbcType=VARCHAR},
      mkrtkr = #{record.mkrtkr,jdbcType=VARCHAR},
      makerorg = #{record.makerorg,jdbcType=VARCHAR},
      takerorg = #{record.takerorg,jdbcType=VARCHAR},
      stream = #{record.stream,jdbcType=VARCHAR},
      ismultiquoteprvdr = #{record.ismultiquoteprvdr,jdbcType=BIT},
      status = #{record.status,jdbcType=VARCHAR},
      tradetype = #{record.tradetype,jdbcType=VARCHAR},
      workflow = #{record.workflow,jdbcType=VARCHAR},
      origcpty = #{record.origcpty,jdbcType=VARCHAR},
      coveredcpty = #{record.coveredcpty,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      epaerrorcode = #{record.epaerrorcode,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      time = #{record.time,jdbcType=TIME},
      ccypair = #{record.ccypair,jdbcType=VARCHAR},
      buysell = #{record.buysell,jdbcType=VARCHAR},
      basamt = #{record.basamt,jdbcType=NUMERIC},
      usdamt = #{record.usdamt,jdbcType=NUMERIC},
      isretailtrade = #{record.isretailtrade,jdbcType=BIT},
      tradethrough = #{record.tradethrough,jdbcType=BIT},
      emsrateguid = #{record.emsrateguid,jdbcType=VARCHAR},
      traderateguid = #{record.traderateguid,jdbcType=VARCHAR},
      isemsepaguidsame = #{record.isemsepaguidsame,jdbcType=BIT},
      ems_eparatearrivalcode = #{record.emsEparatearrivalcode,jdbcType=INTEGER},
      isenoughliquidity = #{record.isenoughliquidity,jdbcType=BIT},
      updatescountatsamems = #{record.updatescountatsamems,jdbcType=INTEGER},
      traderatehitcount = #{record.traderatehitcount,jdbcType=INTEGER},
      traderatetier = #{record.traderatetier,jdbcType=INTEGER},
      traderate = #{record.traderate,jdbcType=NUMERIC},
      prevailingprice = #{record.prevailingprice,jdbcType=NUMERIC},
      changeinprice = #{record.changeinprice,jdbcType=NUMERIC},
      cpriceimpr = #{record.cpriceimpr,jdbcType=BIT},
      ppriceimpr = #{record.ppriceimpr,jdbcType=BIT},
      numberofeventsmissed = #{record.numberofeventsmissed,jdbcType=INTEGER},
      rateeventlifetime_ms = #{record.rateeventlifetimeMs,jdbcType=INTEGER},
      ratevaluelifetime_ms = #{record.ratevaluelifetimeMs,jdbcType=INTEGER},
      ratebucket = #{record.ratebucket,jdbcType=VARCHAR},
      ratestatus = #{record.ratestatus,jdbcType=VARCHAR},
      resiliencyfactor = #{record.resiliencyfactor,jdbcType=NUMERIC},
      isresilient = #{record.isresilient,jdbcType=BIT},
      edgetradingmarginms = #{record.edgetradingmarginms,jdbcType=INTEGER},
      staleratemarginms = #{record.staleratemarginms,jdbcType=INTEGER},
      isedgetrading_50 = #{record.isedgetrading50,jdbcType=BIT},
      isedgetrading_10 = #{record.isedgetrading10,jdbcType=BIT},
      quotedspread = #{record.quotedspread,jdbcType=NUMERIC},
      effectivespread = #{record.effectivespread,jdbcType=NUMERIC},
      spreadafter2secs = #{record.spreadafter2secs,jdbcType=NUMERIC},
      spreadafter4secs = #{record.spreadafter4secs,jdbcType=NUMERIC},
      spreadafter10secs = #{record.spreadafter10secs,jdbcType=NUMERIC},
      spreadafter20secs = #{record.spreadafter20secs,jdbcType=NUMERIC},
      spreadafter30secs = #{record.spreadafter30secs,jdbcType=NUMERIC},
      spreadafter60secs = #{record.spreadafter60secs,jdbcType=NUMERIC},
      cwin2secs = #{record.cwin2secs,jdbcType=BIT},
      cwin4secs = #{record.cwin4secs,jdbcType=BIT},
      istraderate1sided = #{record.istraderate1sided,jdbcType=BIT},
      isnextrate1sided = #{record.isnextrate1sided,jdbcType=BIT},
      responsetime = #{record.responsetime,jdbcType=INTEGER},
      pricediscoverytime = #{record.pricediscoverytime,jdbcType=INTEGER},
      insidespread = #{record.insidespread,jdbcType=NUMERIC},
      ismktsnapparsed = #{record.ismktsnapparsed,jdbcType=BIT},
      isauditlogparsed = #{record.isauditlogparsed,jdbcType=BIT},
      virtualserver = #{record.virtualserver,jdbcType=VARCHAR},
      costusd = #{record.costusd,jdbcType=NUMERIC},
      quotedspreadpip = #{record.quotedspreadpip,jdbcType=NUMERIC},
      effectivespreadpip = #{record.effectivespreadpip,jdbcType=NUMERIC},
      spreadafter2secspip = #{record.spreadafter2secspip,jdbcType=NUMERIC},
      spreadafter4secspip = #{record.spreadafter4secspip,jdbcType=NUMERIC},
      spreadafter10secspip = #{record.spreadafter10secspip,jdbcType=NUMERIC},
      spreadafter20secspip = #{record.spreadafter20secspip,jdbcType=NUMERIC},
      spreadafter30secspip = #{record.spreadafter30secspip,jdbcType=NUMERIC},
      spreadafter60secspip = #{record.spreadafter60secspip,jdbcType=NUMERIC},
      insidespreadcostusd = #{record.insidespreadcostusd,jdbcType=NUMERIC},
      insidespreadpip = #{record.insidespreadpip,jdbcType=NUMERIC},
      tradematchround = #{record.tradematchround,jdbcType=INTEGER},
      nextbestprice = #{record.nextbestprice,jdbcType=NUMERIC},
      nextbestprvdr = #{record.nextbestprvdr,jdbcType=VARCHAR},
      slippagewrtnextbestprice = #{record.slippagewrtnextbestprice,jdbcType=NUMERIC},
      nextbestpricemissedbyms = #{record.nextbestpricemissedbyms,jdbcType=INTEGER},
      timeelapsedsinceemsrate = #{record.timeelapsedsinceemsrate,jdbcType=INTEGER},
      timeelapsedsinceprevrate = #{record.timeelapsedsinceprevrate,jdbcType=INTEGER},
      eventsmissedafteremsrate = #{record.eventsmissedafteremsrate,jdbcType=INTEGER},
      postemsratemissedeventsat = #{record.postemsratemissedeventsat,jdbcType=VARCHAR},
      emsmatchingduration = #{record.emsmatchingduration,jdbcType=INTEGER},
      serveracceptanceduration = #{record.serveracceptanceduration,jdbcType=INTEGER},
      serverresponseduration = #{record.serverresponseduration,jdbcType=INTEGER},
      tradesizebucket = #{record.tradesizebucket,jdbcType=VARCHAR},
      ratesrelatederrorcode = #{record.ratesrelatederrorcode,jdbcType=VARCHAR},
      snapshotrelatederrorcode = #{record.snapshotrelatederrorcode,jdbcType=VARCHAR},
      rateauditrelatederrorcode = #{record.rateauditrelatederrorcode,jdbcType=VARCHAR},
      ishistoricalmatch = #{record.ishistoricalmatch,jdbcType=VARCHAR},
      tieracceptancepattern = #{record.tieracceptancepattern,jdbcType=VARCHAR},
      istieracceptanceconsistent = #{record.istieracceptanceconsistent,jdbcType=BIT},
      takerisbroker = #{record.takerisbroker,jdbcType=BIT},
      makerisbroker = #{record.makerisbroker,jdbcType=BIT},
      tradescount2secpast = #{record.tradescount2secpast,jdbcType=INTEGER},
      tradescount250mspast = #{record.tradescount250mspast,jdbcType=INTEGER},
      tradescountwithlastquote = #{record.tradescountwithlastquote,jdbcType=INTEGER},
      tradesvolume2secpast = #{record.tradesvolume2secpast,jdbcType=BIGINT},
      tradesvolume250mspast = #{record.tradesvolume250mspast,jdbcType=BIGINT},
      tradesvolumewithlastquote = #{record.tradesvolumewithlastquote,jdbcType=BIGINT},
      liquiditywithlastquote = #{record.liquiditywithlastquote,jdbcType=BIGINT},
      fxbatstartofsec = #{record.fxbatstartofsec,jdbcType=NUMERIC},
      fxbatstartofsecspread = #{record.fxbatstartofsecspread,jdbcType=NUMERIC},
      fxbatstartofsecspreadpip = #{record.fxbatstartofsecspreadpip,jdbcType=NUMERIC},
      fxbatendofsec = #{record.fxbatendofsec,jdbcType=NUMERIC},
      fxbatendofsecspread = #{record.fxbatendofsecspread,jdbcType=NUMERIC},
      fxbatendofsecspreadpip = #{record.fxbatendofsecspreadpip,jdbcType=NUMERIC},
      internalcomment = #{record.internalcomment,jdbcType=VARCHAR},
      isdisplayedliquidity = #{record.isdisplayedliquidity,jdbcType=BIT},
      isdisplaystreaminvolved = #{record.isdisplaystreaminvolved,jdbcType=BIT},
      isdisplaystream = #{record.isdisplaystream,jdbcType=BIT},
      quotearrivaldelay = #{record.quotearrivaldelay,jdbcType=INTEGER},
      isquotearrivaldelayed = #{record.isquotearrivaldelayed,jdbcType=BIT},
      priceafter2secs = #{record.priceafter2secs,jdbcType=NUMERIC},
      priceafter4secs = #{record.priceafter4secs,jdbcType=NUMERIC},
      priceafter10secs = #{record.priceafter10secs,jdbcType=NUMERIC},
      priceafter20secs = #{record.priceafter20secs,jdbcType=NUMERIC},
      priceafter30secs = #{record.priceafter30secs,jdbcType=NUMERIC},
      priceafter60secs = #{record.priceafter60secs,jdbcType=NUMERIC},
      priceprovspreadval = #{record.priceprovspreadval,jdbcType=NUMERIC},
      priceprovspreadunits = #{record.priceprovspreadunits,jdbcType=VARCHAR},
      quotedspreadfromrateaudit = #{record.quotedspreadfromrateaudit,jdbcType=NUMERIC},
      quotedspreadpipsfromrateaudit = #{record.quotedspreadpipsfromrateaudit,jdbcType=NUMERIC},
      partial = #{record.partial,jdbcType=VARCHAR},
      matchingamount = #{record.matchingamount,jdbcType=NUMERIC},
      sweepnumberfromgm = #{record.sweepnumberfromgm,jdbcType=INTEGER},
      tradethroughwrtsweep = #{record.tradethroughwrtsweep,jdbcType=BIT},
      traderatevaluetruelife = #{record.traderatevaluetruelife,jdbcType=BIGINT},
      adaptortoislatency = #{record.adaptortoislatency,jdbcType=BIGINT},
      realratesprovider = #{record.realratesprovider,jdbcType=VARCHAR},
      realratesstream = #{record.realratesstream,jdbcType=VARCHAR},
      streamquotedspreadfromrateaudit = #{record.streamquotedspreadfromrateaudit,jdbcType=NUMERIC},
      streamquotedspreadpipsfromrateaudit = #{record.streamquotedspreadpipsfromrateaudit,jdbcType=NUMERIC},
      emsratetier = #{record.emsratetier,jdbcType=INTEGER},
      pricejustbeforeemsrate = #{record.pricejustbeforeemsrate,jdbcType=NUMERIC},
      priceonesecbeforeemsrate = #{record.priceonesecbeforeemsrate,jdbcType=NUMERIC},
      pricetwosecbeforeemsrate = #{record.pricetwosecbeforeemsrate,jdbcType=NUMERIC},
      pricethreesecbeforeemsrate = #{record.pricethreesecbeforeemsrate,jdbcType=NUMERIC},
      timedistancefromfirstmatchinground = #{record.timedistancefromfirstmatchinground,jdbcType=BIGINT},
      availablevolatmatchingrate = #{record.availablevolatmatchingrate,jdbcType=NUMERIC},
      dealtamt = #{record.dealtamt,jdbcType=NUMERIC},
      matchingamtusd = #{record.matchingamtusd,jdbcType=NUMERIC},
      streamsacceptancepattern = #{record.streamsacceptancepattern,jdbcType=VARCHAR},
      streamsacceptancepatterndetails = #{record.streamsacceptancepatterndetails,jdbcType=VARCHAR},
      streamsacceptancerefkey = #{record.streamsacceptancerefkey,jdbcType=NUMERIC},
      rateefftimeuptoms = #{record.rateefftimeuptoms,jdbcType=BIT},
      spreadafter1secs = #{record.spreadafter1secs,jdbcType=NUMERIC},
      spreadafter1secspip = #{record.spreadafter1secspip,jdbcType=NUMERIC},
      fxbshiftafter1sec = #{record.fxbshiftafter1sec,jdbcType=NUMERIC},
      fxbshiftafter1secpip = #{record.fxbshiftafter1secpip,jdbcType=NUMERIC},
      fxbshiftafter2sec = #{record.fxbshiftafter2sec,jdbcType=NUMERIC},
      fxbshiftafter2secpip = #{record.fxbshiftafter2secpip,jdbcType=NUMERIC},
      fxbshiftafter4sec = #{record.fxbshiftafter4sec,jdbcType=NUMERIC},
      fxbshiftafter4secpip = #{record.fxbshiftafter4secpip,jdbcType=NUMERIC},
      fxbshiftafter10sec = #{record.fxbshiftafter10sec,jdbcType=NUMERIC},
      fxbshiftafter10secpip = #{record.fxbshiftafter10secpip,jdbcType=NUMERIC},
      fxbshiftafter20sec = #{record.fxbshiftafter20sec,jdbcType=NUMERIC},
      fxbshiftafter20secpip = #{record.fxbshiftafter20secpip,jdbcType=NUMERIC},
      fxbshiftafter30sec = #{record.fxbshiftafter30sec,jdbcType=NUMERIC},
      fxbshiftafter30secpip = #{record.fxbshiftafter30secpip,jdbcType=NUMERIC},
      fxbshiftafter60sec = #{record.fxbshiftafter60sec,jdbcType=NUMERIC},
      fxbshiftafter60secpip = #{record.fxbshiftafter60secpip,jdbcType=NUMERIC},
      ismoreliquiditywithemsquote = #{record.ismoreliquiditywithemsquote,jdbcType=BIT},
      ismoreliquiditywithepaquote = #{record.ismoreliquiditywithepaquote,jdbcType=BIT},
      ratesentbyadapterlatency = #{record.ratesentbyadapterlatency,jdbcType=NUMERIC},
      adapteroutisinlatency = #{record.adapteroutisinlatency,jdbcType=NUMERIC},
      midrate = #{record.midrate,jdbcType=NUMERIC},
      halfspread = #{record.halfspread,jdbcType=NUMERIC},
      halfspreadpip = #{record.halfspreadpip,jdbcType=NUMERIC},
      halfspreadbp = #{record.halfspreadbp,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="selectByStatus" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    tradeid,
    date || ' ' || time as time,
    traderate,
    stream,
    makerorg,
    ccypair,
    traderatetier,
    buysell
    from internal_trade_epa_02_2016
    where ratesrelatederrorcode='NONE' and status = #{status} order by runid asc limit 1
  </select>
  
</mapper>
